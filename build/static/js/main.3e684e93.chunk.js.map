{"version":3,"sources":["HeaderComponent.js","MainCrashedComponent.js","MainBettingComponent.js","ConnectMetaMask.js","ControlComponent.js","ResultTableComponent.js","ChatMessages.js","ChatComponent.js","ChartContainer.js","MainComponent.js","App.js","index.js"],"names":["HeaderComponent","props","size","useContext","ResponsiveContext","Header","background","pad","height","Box","animation","Button","secondary","label","Text","justify","color","Menu","a11yTitle","dropProps","align","top","right","icon","Cube","items","primary","Money","href","playerExistsInDB","loggedIn","Anchor","Magic","gap","User","accounts","substring","length","direction","alignSelf","userName","Alert","disabled","onClick","logIn","MainCrashedComponent","gridArea","fill","round","border","Stack","anchor","maxDomain","x","y","minDomain","width","dependentAxis","orientation","style","axis","stroke","strokeWidth","tickLabels","fontSize","fontFamily","tickFormat","t","data","parent","interpolation","type","duration","Heading","margin","textAlign","crashPoint","renderer","seconds","milliseconds","MainBettingComponent","date","Math","abs","gameStartTime","Date","now","responsive","intervalDelay","precision","ConnectMetaMask","currentAccount","onboarding","MetaMaskOnboarding","handleAccountsChanged","console","log","getAccount","a","window","ethereum","request","method","then","catch","err","code","error","metaMaskInstalled","id","Integration","startOnboarding","suggestionsBet","suggestionsAutoBet","ControlComponent","useState","undefined","valueBet","setValueBet","valueAutoBet","setValueAutoBet","onSuggestionSelectBet","event","suggestion","onSuggestionSelectAutoBet","isReady","Grid","columns","count","state","userPlacedBet","Form","onSubmit","value","placeBet","FormField","required","name","htmlFor","TextInput","placeholder","suggestions","onSuggestionSelect","onChange","target","weight","reverse","Launch","Time","userWon","userCrashed","cashOutColor","Atm","initiateCashOut","Achievement","wonAmount","secondray","setAccounts","setChainId","setWeb3","setInitiatedLogIn","setLoggedIn","ResultTableComponent","property","sort","setSort","overflow","DataTable","step","show","onSort","header","opacity","body","footer","verticalAlign","render","datum","truncate","user","profit","at","bet","vertical","Meter","values","bravery","thickness","resultTableAll","customTheme","table","horizontal","ChatMessages","recentMessages","this","socket","on","receivedMessages","setState","off","Consumer","className","Grommet","theme","map","d","TableRow","TableCell","username","message","React","Component","ChatComponent","setValue","rows","areas","start","end","addPlayer","ChatOption","setMessage","Send","bottom","ChartContainer","growthFunc","ms","maxX","maxY","startTime","endTime","connected","loaded","timeDelay","elapsed","tick","dataArray","exp","autoCashOutMultiplier","autoCashOut","setTimeout","loop","bind","receivedChartArray","receivedStartData","parse","receivedEndData","x1","y1","x2","y2","offset","stopColor","toFixed","small","medium","large","xlarge","fixedGridAreas","Responsive","children","overrideColumns","overrideRows","columnsVal","rowsVal","areasVal","Array","isArray","MainComponent","setData","setCrashPoint","setResultTableAll","setConnected","chartArray","setChartArray","bettingTime","setBettingTime","setGameStartTime","useEffect","receivedState","receivedCrashPoint","receivedBettingTime","receivedGameStartTime","setStartTimeApp","setGameState","setUserBetAmount","setUserPlacedBet","setUserWon","setUserCrashed","setWonAmount","setAutoCashOutMultiplier","setInitiatedCashOut","setCashOutMultiplier","setInitColorBetting","setInitColorWaiting","receivedData","setColor","setCashOutColor","initColorWaiting","setInitConnection","userBetAmount","setUserName","playerExists","checkPlayerInDB","chatLoaded","setChatLoaded","setMaxX","setMaxY","initiatedCashOut","io","App","web3","contract","setContract","token","setToken","contractAddress","setContractAddress","tokenAddress","setTokenAddress","owner","setOwner","setMetaMaskInstalled","userAddress","setUserAddress","setplayerExistsInDB","gameState","cashOutMultiplier","startTimeApp","initColorBetting","Axios","address","post","response","addressCnt","getPlayerUsername","Web3","accs","eth","Contract","Crash","abi","process","CrashToken","privateKeyToAccount","init","isConnected","methods","allowance","call","utils","toWei","betAmount","toString","approve","toBN","send","from","emit","cashOut","getBetAmount","betInside","prizeAmount","fromWei","transaction1","transferFrom","transaction2","account","transaction","_parent","_address","encodeABI","estimateGas","options","to","gas","signTransaction","privateKey","signed","sendSignedTransaction","rawTransaction","receipt","calculateBravery","formField","button","radius","hover","global","colors","text","dark","light","focus","font","family","drop","shadowSize","extend","elevation","xsmall","xxsmall","dataTable","side","menu","deepMerge","grommet","backgroundColor","full","Footer","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3e684e93.chunk.js","sourcesContent":["import {\n  Header,\n  Anchor,\n  Box,\n  ResponsiveContext,\n  Menu,\n  Button,\n  Text,\n} from \"grommet\";\nimport { Money, Cube, Magic } from \"grommet-icons\";\nimport { User } from \"grommet-icons\";\nimport { Alert } from \"grommet-icons\";\nimport { useContext } from \"react\";\n\nfunction HeaderComponent(props) {\n  const size = useContext(ResponsiveContext);\n\n  return (\n    <>\n      {size === \"small\" && (\n        <>\n          <Header background=\"#171717\" pad=\"medium\" height=\"55px\">\n            <Box animation=\"slideRight\">\n              <Button\n                secondary\n                label={<Text size=\"xlarge\">CRASH</Text>}\n                justify=\"center\"\n                color={props.color}\n                background=\"#171717\"\n              />\n            </Box>\n            <Box justify=\"end\" background=\"#171717\">\n              <Menu\n                a11yTitle=\"Navigation Menu\"\n                dropProps={{ align: { top: \"bottom\", right: \"right\" } }}\n                icon={<Cube size=\"medium\" color={props.color} />}\n                items={[\n                  {\n                    label: (\n                      <Box animation=\"fadeIn\">\n                        <Button\n                          primary\n                          color={props.color}\n                          icon={<Money />}\n                          label=\"BUY $ITM\"\n                        />\n                      </Box>\n                    ),\n                    href: \"https://pancakeswap.finance/swap#/swap?outputCurrency=0xee409bb2b8874eb5b077f4f83f91a390df82adad\",\n                  },\n                  {\n                    label: (\n                      <>\n                        {props.playerExistsInDB === false && !props.loggedIn && (\n                          <Box animation=\"fadeIn\">\n                            <Anchor\n                              label={\n                                <Button\n                                  icon={<Magic />}\n                                  color={props.color}\n                                  secondary\n                                  label=\"INSTALL METAMASK\"\n                                  gap=\"small\"\n                                />\n                              }\n                              href=\"https://metamask.io/download.html\"\n                            />\n                          </Box>\n                        )}\n                        {props.playerExistsInDB === false && props.loggedIn && (\n                          <Box animation=\"fadeIn\">\n                            <Button\n                              icon={<User />}\n                              secondary\n                              color={props.color}\n                              label={\n                                props.accounts[0].substring(0, 6) +\n                                \"...\" +\n                                props.accounts[0].substring(\n                                  props.accounts[0].length - 4,\n                                  props.accounts[0].length\n                                )\n                              }\n                              gap=\"small\"\n                            />\n                          </Box>\n                        )}\n                        {props.playerExistsInDB === true && props.loggedIn && (\n                          <Box\n                            direction=\"row\"\n                            gap=\"small\"\n                            alignSelf=\"center\"\n                            justify=\"center\"\n                            animation=\"fadeIn\"\n                          >\n                            <Button\n                              icon={<User />}\n                              secondary\n                              color={props.color}\n                              label={\n                                props.userName +\n                                \": \" +\n                                props.accounts[0].substring(0, 6) +\n                                \"...\" +\n                                props.accounts[0].substring(\n                                  props.accounts[0].length - 4,\n                                  props.accounts[0].length\n                                )\n                              }\n                              gap=\"small\"\n                            />\n                          </Box>\n                        )}\n                      </>\n                    ),\n                  },\n                ]}\n              />\n            </Box>\n          </Header>\n        </>\n      )}\n      {size === \"medium\" && (\n        <>\n          <Header background=\"#171717\" pad=\"medium\" height=\"67px\">\n            <Box animation=\"slideRight\">\n              <Button\n                secondary\n                color={props.color}\n                label={<Text size=\"xlarge\">CRASH</Text>}\n                justify=\"center\"\n                background=\"#171717\"\n              />\n            </Box>\n            <Box justify=\"end\" direction=\"row\" gap=\"medium\">\n              <Box animation=\"fadeIn\">\n                <Anchor\n                  label={\n                    <Button\n                      primary\n                      color={props.color}\n                      icon={<Money />}\n                      label={<Text size=\"small\">BUY $ITM</Text>}\n                    />\n                  }\n                  href=\"https://pancakeswap.finance/swap#/swap?outputCurrency=0xee409bb2b8874eb5b077f4f83f91a390df82adad\"\n                />\n              </Box>\n              {!props.loggedIn ? (\n                <Box animation=\"fadeIn\">\n                  <Anchor\n                    label={\n                      <Button\n                        secondary\n                        color={props.color}\n                        icon={<Alert />}\n                        disabled={true}\n                        label={\n                          <Text size=\"small\">\n                            You must be connected with MetaMask to play!\n                          </Text>\n                        }\n                        onClick={() => props.logIn()}\n                      />\n                    }\n                  />\n                </Box>\n              ) : (\n                <>\n                  {props.playerExistsInDB === false && (\n                    <Box animation=\"fadeIn\">\n                      <Button\n                        icon={<User />}\n                        color={props.color}\n                        secondary\n                        label={\n                          <Text size=\"small\">\n                            {props.accounts[0].substring(0, 6) +\n                              \"...\" +\n                              props.accounts[0].substring(\n                                props.accounts[0].length - 4,\n                                props.accounts[0].length\n                              )}\n                          </Text>\n                        }\n                        gap=\"small\"\n                      />\n                    </Box>\n                  )}\n                  {props.playerExistsInDB === true && (\n                    <Box\n                      direction=\"row\"\n                      gap=\"small\"\n                      alignSelf=\"center\"\n                      justify=\"center\"\n                      animation=\"slideLeft\"\n                    >\n                      <Button\n                        icon={<User />}\n                        secondary\n                        color={props.color}\n                        label={\n                          <Text size=\"small\">\n                            {\" \"}\n                            {props.userName +\n                              \": \" +\n                              props.accounts[0].substring(0, 6) +\n                              \"...\" +\n                              props.accounts[0].substring(\n                                props.accounts[0].length - 4,\n                                props.accounts[0].length\n                              )}\n                          </Text>\n                        }\n                        gap=\"small\"\n                      />\n                    </Box>\n                  )}\n                </>\n              )}\n            </Box>\n          </Header>\n        </>\n      )}\n      {(size === \"large\" || size === \"xlarge\") && (\n        <>\n          <Header background=\"#171717\" pad=\"medium\" height=\"77px\">\n            <Box animation=\"slideRight\">\n              <Button\n                secondary\n                size=\"xxlarge\"\n                label=\"CRASH\"\n                justify=\"center\"\n                background=\"#171717\"\n                color={props.color}\n              />\n            </Box>\n            <Box justify=\"end\" direction=\"row\" gap=\"medium\">\n              <Box animation=\"fadeIn\">\n                <Anchor\n                  label={\n                    <Button\n                      primary\n                      color={props.color}\n                      icon={<Money />}\n                      label=\"BUY $ITM\"\n                    />\n                  }\n                  href=\"https://pancakeswap.finance/swap#/swap?outputCurrency=0xee409bb2b8874eb5b077f4f83f91a390df82adad\"\n                />\n              </Box>\n              {!props.loggedIn ? (\n                <Box animation=\"fadeIn\">\n                  <Anchor\n                    label={\n                      <Button\n                        secondary\n                        icon={<Alert />}\n                        color={props.color}\n                        disabled={true}\n                        label=\"You must be connected with MetaMask to play!\"\n                        onClick={() => props.logIn()}\n                      />\n                    }\n                  />\n                </Box>\n              ) : (\n                <>\n                  {props.playerExistsInDB === false && (\n                    <Box animation=\"fadeIn\">\n                      <Button\n                        icon={<User />}\n                        secondary\n                        color={props.color}\n                        label={\n                          props.accounts[0].substring(0, 6) +\n                          \"...\" +\n                          props.accounts[0].substring(\n                            props.accounts[0].length - 4,\n                            props.accounts[0].length\n                          )\n                        }\n                        gap=\"small\"\n                      />\n                    </Box>\n                  )}\n                  {props.playerExistsInDB === true && (\n                    <Box\n                      direction=\"row\"\n                      gap=\"small\"\n                      alignSelf=\"center\"\n                      justify=\"center\"\n                      animation=\"slideLeft\"\n                    >\n                      <Button\n                        icon={<User />}\n                        secondary\n                        color={props.color}\n                        label={\n                          props.userName +\n                          \": \" +\n                          props.accounts[0].substring(0, 6) +\n                          \"...\" +\n                          props.accounts[0].substring(\n                            props.accounts[0].length - 4,\n                            props.accounts[0].length\n                          )\n                        }\n                        gap=\"small\"\n                      />\n                    </Box>\n                  )}\n                </>\n              )}\n            </Box>\n          </Header>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default HeaderComponent;\n","import { Box, Heading, Stack, ResponsiveContext } from \"grommet\";\nimport { VictoryLine, VictoryChart, VictoryArea, VictoryAxis } from \"victory\";\nimport { useContext } from \"react\";\n\nfunction MainCrashedComponent(props) {\n  const size = useContext(ResponsiveContext);\n\n  return (\n    <>\n      {size === \"small\" && (\n        <Box\n          gridArea=\"chart\"\n          background=\"#171717\"\n          align=\"center\"\n          fill={true}\n          pad=\"small\"\n          round=\"xsmall\"\n          border={{ color: \"#1B1B1B\", size: \"large\" }}\n        >\n          <Stack anchor=\"center\" fill>\n            <VictoryChart\n              maxDomain={{ x: 0.69314, y: 2 }}\n              minDomain={{ x: 0, y: 1 }}\n              height={700}\n              width={1390}\n            >\n              <VictoryAxis\n                dependentAxis\n                orientation=\"left\"\n                style={{\n                  axis: { stroke: \"#AAAAAA\", strokeWidth: 1 },\n                  tickLabels: {\n                    fill: \"#AAAAAA\",\n                    fontSize: 19,\n                    fontFamily: \"HelveticaNeueBd\",\n                  },\n                }}\n                tickFormat={(t) => `${t}x`}\n              />\n              <VictoryAxis\n                orientation=\"bottom\"\n                style={{\n                  axis: { stroke: \"#AAAAAA\", strokeWidth: 1 },\n                  tickLabels: {\n                    fill: \"#AAAAAA\",\n                    strokeWidth: 2,\n                    fontSize: 19,\n                    fontFamily: \"HelveticaNeueBd\",\n                  },\n                }}\n                tickFormat={(t) => `${t * 10}`}\n              />\n              <VictoryArea data={props.data} />\n              <VictoryLine\n                style={{\n                  data: { stroke: \"#6FFFB0\", strokeWidth: 5, border: \"10px\" },\n                  parent: { border: \"50px solid #fff\" },\n                }}\n                data={props.data}\n                interpolation=\"natural\"\n              />\n            </VictoryChart>\n            <Box animation={{ type: \"zoomOut\", duration: 100, size: \"large\" }}>\n              <Heading\n                size=\"medium\"\n                color=\"#FF4040\"\n                alignSelf=\"center\"\n                margin=\"none\"\n                textAlign=\"center\"\n              >\n                CRASHED <br /> @{props.crashPoint}x\n              </Heading>\n            </Box>\n          </Stack>\n        </Box>\n      )}\n      {size === \"medium\" && (\n        <Box\n          gridArea=\"chart\"\n          background=\"#171717\"\n          align=\"center\"\n          fill={true}\n          pad=\"small\"\n          round=\"xsmall\"\n          border={{ color: \"#1B1B1B\", size: \"large\" }}\n        >\n          <Stack anchor=\"center\" fill>\n            <VictoryChart\n              maxDomain={{ x: 0.69314, y: 2 }}\n              minDomain={{ x: 0, y: 1 }}\n              height={700}\n              width={1390}\n            >\n              <VictoryAxis\n                dependentAxis\n                orientation=\"left\"\n                style={{\n                  axis: { stroke: \"#AAAAAA\", strokeWidth: 1.5 },\n                  tickLabels: {\n                    fill: \"#AAAAAA\",\n                    fontSize: 28,\n                    fontFamily: \"HelveticaNeueBd\",\n                  },\n                }}\n                tickFormat={(t) => `${t}x`}\n              />\n              <VictoryAxis\n                orientation=\"bottom\"\n                style={{\n                  axis: { stroke: \"#AAAAAA\", strokeWidth: 1.5 },\n                  tickLabels: {\n                    fill: \"#AAAAAA\",\n                    strokeWidth: 2,\n                    fontSize: 28,\n                    fontFamily: \"HelveticaNeueBd\",\n                  },\n                }}\n                tickFormat={(t) => `${t * 10}`}\n              />\n              <VictoryArea data={props.data} />\n              <VictoryLine\n                style={{\n                  data: { stroke: \"#6FFFB0\", strokeWidth: 5, border: \"10px\" },\n                  parent: { border: \"50px solid #fff\" },\n                }}\n                data={props.data}\n                interpolation=\"natural\"\n              />\n            </VictoryChart>\n            <Box animation={{ type: \"zoomOut\", duration: 100, size: \"large\" }}>\n              <Heading\n                size=\"medium\"\n                color=\"#FF4040\"\n                alignSelf=\"center\"\n                margin=\"none\"\n                textAlign=\"center\"\n              >\n                CRASHED <br /> @{props.crashPoint}x\n              </Heading>\n            </Box>\n          </Stack>\n        </Box>\n      )}\n      {(size === \"large\" || size === \"xlarge\") && (\n        <Box\n          gridArea=\"chart\"\n          background=\"#171717\"\n          align=\"center\"\n          fill={true}\n          pad=\"small\"\n          round=\"xsmall\"\n          border={{ color: \"#1B1B1B\", size: \"large\" }}\n        >\n          <Stack anchor=\"center\" fill>\n            <VictoryChart\n              maxDomain={{ x: 0.69314, y: 2 }}\n              minDomain={{ x: 0, y: 1 }}\n              height={700}\n              width={1390}\n            >\n              <VictoryAxis\n                dependentAxis\n                orientation=\"left\"\n                style={{\n                  axis: { stroke: \"#AAAAAA\", strokeWidth: 2 },\n                  tickLabels: {\n                    fill: \"#AAAAAA\",\n                    fontSize: 30,\n                    fontFamily: \"HelveticaNeueBd\",\n                  },\n                }}\n                tickFormat={(t) => `${t}x`}\n              />\n              <VictoryAxis\n                orientation=\"bottom\"\n                style={{\n                  axis: { stroke: \"#AAAAAA\", strokeWidth: 2 },\n                  tickLabels: {\n                    fill: \"#AAAAAA\",\n                    strokeWidth: 2,\n                    fontSize: 30,\n                    fontFamily: \"HelveticaNeueBd\",\n                  },\n                }}\n                tickFormat={(t) => `${t * 10}`}\n              />\n              <VictoryArea data={props.data} />\n              <VictoryLine\n                style={{\n                  data: { stroke: \"#6FFFB0\", strokeWidth: 5, border: \"10px\" },\n                  parent: { border: \"50px solid #fff\" },\n                }}\n                data={props.data}\n                interpolation=\"natural\"\n              />\n            </VictoryChart>\n            <Box animation={{ type: \"zoomOut\", duration: 100, size: \"large\" }}>\n              <Heading\n                size=\"large\"\n                color=\"#FF4040\"\n                alignSelf=\"center\"\n                margin=\"none\"\n                textAlign=\"center\"\n              >\n                CRASHED <br /> @{props.crashPoint}x\n              </Heading>\n            </Box>\n          </Stack>\n        </Box>\n      )}\n    </>\n  );\n}\n\nexport default MainCrashedComponent;\n","import { Box, Heading, Stack, ResponsiveContext } from \"grommet\";\nimport { VictoryLine, VictoryChart, VictoryArea, VictoryAxis } from \"victory\";\nimport Countdown from \"react-countdown\";\nimport { useContext } from \"react\";\n\n// Timer\nconst renderer = ({ seconds, milliseconds }) => {\n  milliseconds /= 100;\n  return (\n    <span>\n      {seconds}.{milliseconds}\n    </span>\n  );\n};\n\nfunction MainBettingComponent(props) {\n  const size = useContext(ResponsiveContext);\n  const date = Math.abs(props.gameStartTime - Date.now());\n\n  return (\n    <>\n      {size === \"small\" && (\n        <>\n          <Box\n            gridArea=\"chart\"\n            background=\"#171717\"\n            fill={true}\n            pad=\"small\"\n            round=\"xsmall\"\n            responsive={true}\n            border={{ color: \"#1B1B1B\", size: \"large\" }}\n          >\n            <Stack anchor=\"center\" fill={true}>\n              <VictoryChart\n                maxDomain={{ x: 0.69314, y: 2 }}\n                minDomain={{ x: 0, y: 1 }}\n                height={700}\n                width={1390}\n              >\n                <VictoryAxis\n                  dependentAxis\n                  orientation=\"left\"\n                  style={{\n                    axis: { stroke: \"#AAAAAA\", strokeWidth: 1 },\n                    tickLabels: {\n                      fill: \"#AAAAAA\",\n                      fontSize: 19,\n                      fontFamily: \"HelveticaNeueBd\",\n                    },\n                  }}\n                  tickFormat={(t) => `${t}x`}\n                />\n                <VictoryAxis\n                  orientation=\"bottom\"\n                  style={{\n                    axis: { stroke: \"#AAAAAA\", strokeWidth: 1 },\n                    tickLabels: {\n                      fill: \"#AAAAAA\",\n                      strokeWidth: 2,\n                      fontSize: 19,\n                      fontFamily: \"HelveticaNeueBd\",\n                    },\n                  }}\n                  tickFormat={(t) => `${t * 10}`}\n                />\n                <VictoryArea data={props.data} />\n                <VictoryLine\n                  style={{\n                    data: { stroke: \"#6FFFB0\", strokeWidth: 5 },\n                    parent: { border: \"20px solid #fff\" },\n                  }}\n                  data={props.data}\n                  interpolation=\"natural\"\n                />\n              </VictoryChart>\n              <Box\n                animation={{ type: \"zoomIn\", duration: 300, size: \"medium\" }}\n              >\n                <Heading\n                  size=\"small\"\n                  alignSelf=\"center\"\n                  textAlign=\"center\"\n                  margin=\"none\"\n                >\n                  Next Round In{\" \"}\n                  <Countdown\n                    date={Date.now() + date}\n                    intervalDelay={0}\n                    precision={1}\n                    renderer={renderer}\n                  />\n                  s\n                </Heading>\n              </Box>\n            </Stack>\n          </Box>\n        </>\n      )}\n      {size === \"medium\" && (\n        <>\n          <Box\n            gridArea=\"chart\"\n            background=\"#171717\"\n            fill={true}\n            pad=\"small\"\n            round=\"xsmall\"\n            responsive={true}\n            border={{ color: \"#1B1B1B\", size: \"large\" }}\n          >\n            <Stack anchor=\"center\" fill={true}>\n              <VictoryChart\n                maxDomain={{ x: 0.69314, y: 2 }}\n                minDomain={{ x: 0, y: 1 }}\n                height={700}\n                width={1390}\n              >\n                <VictoryAxis\n                  dependentAxis\n                  orientation=\"left\"\n                  style={{\n                    axis: { stroke: \"#AAAAAA\", strokeWidth: 1.5 },\n                    tickLabels: {\n                      fill: \"#AAAAAA\",\n                      fontSize: 28,\n                      fontFamily: \"HelveticaNeueBd\",\n                    },\n                  }}\n                  tickFormat={(t) => `${t}x`}\n                />\n                <VictoryAxis\n                  orientation=\"bottom\"\n                  style={{\n                    axis: { stroke: \"#AAAAAA\", strokeWidth: 1.5 },\n                    tickLabels: {\n                      fill: \"#AAAAAA\",\n                      strokeWidth: 2,\n                      fontSize: 28,\n                      fontFamily: \"HelveticaNeueBd\",\n                    },\n                  }}\n                  tickFormat={(t) => `${t * 10}`}\n                />\n                <VictoryArea data={props.data} />\n                <VictoryLine\n                  style={{\n                    data: { stroke: \"#6FFFB0\", strokeWidth: 5 },\n                    parent: { border: \"20px solid #fff\" },\n                  }}\n                  data={props.data}\n                  interpolation=\"natural\"\n                />\n              </VictoryChart>\n              <Box\n                animation={{ type: \"zoomIn\", duration: 300, size: \"medium\" }}\n              >\n                <Heading\n                  size=\"small\"\n                  alignSelf=\"center\"\n                  textAlign=\"center\"\n                  margin=\"none\"\n                >\n                  Next Round In{\" \"}\n                  <Countdown\n                    date={Date.now() + date}\n                    intervalDelay={0}\n                    precision={1}\n                    renderer={renderer}\n                  />\n                  s\n                </Heading>\n              </Box>\n            </Stack>\n          </Box>\n        </>\n      )}\n      {(size === \"large\" || size === \"xlarge\") && (\n        <>\n          <Box\n            gridArea=\"chart\"\n            background=\"#171717\"\n            fill={true}\n            pad=\"small\"\n            round=\"xsmall\"\n            responsive={true}\n            border={{ color: \"#1B1B1B\", size: \"large\" }}\n          >\n            <Stack anchor=\"center\" fill={true}>\n              <VictoryChart\n                maxDomain={{ x: 0.69314, y: 2 }}\n                minDomain={{ x: 0, y: 1 }}\n                height={700}\n                width={1390}\n              >\n                <VictoryAxis\n                  dependentAxis\n                  orientation=\"left\"\n                  style={{\n                    axis: { stroke: \"#AAAAAA\", strokeWidth: 2 },\n                    tickLabels: {\n                      fill: \"#AAAAAA\",\n                      fontSize: 30,\n                      fontFamily: \"HelveticaNeueBd\",\n                    },\n                  }}\n                  tickFormat={(t) => `${t}x`}\n                />\n                <VictoryAxis\n                  orientation=\"bottom\"\n                  style={{\n                    axis: { stroke: \"#AAAAAA\", strokeWidth: 2 },\n                    tickLabels: {\n                      fill: \"#AAAAAA\",\n                      strokeWidth: 2,\n                      fontSize: 30,\n                      fontFamily: \"HelveticaNeueBd\",\n                    },\n                  }}\n                  tickFormat={(t) => `${t * 10}`}\n                />\n                <VictoryArea data={props.data} />\n                <VictoryLine\n                  style={{\n                    data: { stroke: \"#6FFFB0\", strokeWidth: 5 },\n                    parent: { border: \"20px solid #fff\" },\n                  }}\n                  data={props.data}\n                  interpolation=\"natural\"\n                />\n              </VictoryChart>\n              <Box\n                animation={{ type: \"zoomIn\", duration: 300, size: \"medium\" }}\n              >\n                <Heading\n                  size=\"medium\"\n                  alignSelf=\"center\"\n                  textAlign=\"center\"\n                  margin=\"none\"\n                >\n                  Next Round In{\" \"}\n                  <Countdown\n                    date={Date.now() + date}\n                    intervalDelay={0}\n                    precision={1}\n                    renderer={renderer}\n                  />\n                  s\n                </Heading>\n              </Box>\n            </Stack>\n          </Box>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default MainBettingComponent;\n","import { Box, Button, ResponsiveContext } from \"grommet\";\nimport { Integration, Magic } from \"grommet-icons\";\nimport { React, useContext } from \"react\";\nimport MetaMaskOnboarding from \"@metamask/onboarding\";\n\nfunction ConnectMetaMask(props) {\n  let currentAccount = null;\n  const onboarding = new MetaMaskOnboarding(\"https://fwd.metamask.io\");\n\n  function handleAccountsChanged(accounts) {\n    if (accounts.length === 0) {\n      console.log(\"Please connect to MetaMask.\");\n    } else if (accounts[0] !== currentAccount) {\n      currentAccount = accounts[0];\n    }\n  }\n  async function getAccount() {\n    window.ethereum\n      .request({ method: \"eth_requestAccounts\" })\n      .then(handleAccountsChanged)\n      .catch((err) => {\n        if (err.code === 4001) {\n          console.log(\"Please connect to MetaMask.\");\n        } else {\n          console.error(err);\n        }\n      });\n  }\n\n  const size = useContext(ResponsiveContext);\n\n  if (props.metaMaskInstalled) {\n    return (\n      <>\n        {size === \"small\" && (\n          <Box\n            gridArea=\"betting\"\n            background=\"#171717\"\n            align=\"center\"\n            justify=\"center\"\n            round=\"xsmall\"\n            pad=\"xsmall\"\n            animation=\"zoomOut\"\n            responsive={true}\n            border={{ color: \"#1B1B1B\", size: \"large\" }}\n          >\n            <Box animation=\"fadeIn\">\n              <Button\n                id=\"connectButton\"\n                secondary\n                icon={<Integration />}\n                label=\"CONNECT\"\n                onClick={() => {\n                  getAccount();\n                }}\n                color={props.color}\n              />\n            </Box>\n          </Box>\n        )}\n        {size === \"medium\" && (\n          <Box\n            gridArea=\"betting\"\n            background=\"#171717\"\n            align=\"center\"\n            justify=\"center\"\n            round=\"xsmall\"\n            pad=\"xsmall\"\n            animation=\"zoomOut\"\n            responsive={true}\n            border={{ color: \"#1B1B1B\", size: \"large\" }}\n          >\n            <Box animation=\"fadeIn\">\n              <Button\n                id=\"connectButton\"\n                secondary\n                icon={<Integration size=\"medium\" />}\n                label=\"CONNECT\"\n                onClick={() => {\n                  getAccount();\n                }}\n                color={props.color}\n              />\n            </Box>\n          </Box>\n        )}\n        {(size === \"large\" || size === \"large\") && (\n          <Box\n            gridArea=\"betting\"\n            background=\"#171717\"\n            align=\"center\"\n            justify=\"center\"\n            round=\"xsmall\"\n            pad=\"xsmall\"\n            animation=\"zoomOut\"\n            responsive={true}\n            border={{ color: \"#1B1B1B\", size: \"large\" }}\n          >\n            <Box animation=\"fadeIn\">\n              <Button\n                id=\"connectButton\"\n                secondary\n                size=\"xlarge\"\n                icon={<Integration />}\n                label=\"CONNECT\"\n                onClick={() => {\n                  getAccount();\n                }}\n                color={props.color}\n              />\n            </Box>\n          </Box>\n        )}\n      </>\n    );\n  } else {\n    return (\n      <>\n        {size === \"small\" && (\n          <Box\n            gridArea=\"betting\"\n            background=\"#171717\"\n            align=\"center\"\n            justify=\"center\"\n            round=\"xsmall\"\n            pad=\"xsmall\"\n            animation=\"zoomOut\"\n            responsive={true}\n            border={{ color: \"#1B1B1B\", size: \"large\" }}\n          >\n            <Box animation=\"fadeIn\">\n              <Button\n                id=\"connectButton\"\n                secondary\n                icon={<Magic />}\n                label=\"INSTALL METAMASK\"\n                onClick={() => {\n                  onboarding.startOnboarding();\n                }}\n                color={props.color}\n              />\n            </Box>\n          </Box>\n        )}\n        {size === \"medium\" && (\n          <Box\n            gridArea=\"betting\"\n            background=\"#171717\"\n            align=\"center\"\n            justify=\"center\"\n            round=\"xsmall\"\n            pad=\"xsmall\"\n            animation=\"zoomOut\"\n            responsive={true}\n            border={{ color: \"#1B1B1B\", size: \"large\" }}\n          >\n            <Box animation=\"fadeIn\">\n              <Button\n                id=\"connectButton\"\n                secondary\n                icon={<Magic size=\"medium\" />}\n                label=\"INSTALL METAMASK\"\n                onClick={() => {\n                  onboarding.startOnboarding();\n                }}\n                color={props.color}\n              />\n            </Box>\n          </Box>\n        )}\n        {(size === \"large\" || size === \"large\") && (\n          <Box\n            gridArea=\"betting\"\n            background=\"#171717\"\n            align=\"center\"\n            justify=\"center\"\n            round=\"xsmall\"\n            pad=\"xsmall\"\n            animation=\"zoomOut\"\n            responsive={true}\n            border={{ color: \"#1B1B1B\", size: \"large\" }}\n          >\n            <Box animation=\"fadeIn\">\n              <Button\n                id=\"connectButton\"\n                secondary\n                size=\"xlarge\"\n                icon={<Magic />}\n                label=\"INSTALL METAMASK\"\n                onClick={() => {\n                  onboarding.startOnboarding();\n                }}\n                color={props.color}\n              />\n            </Box>\n          </Box>\n        )}\n      </>\n    );\n  }\n}\n\nexport default ConnectMetaMask;\n","import {\n  Box,\n  Grid,\n  Button,\n  TextInput,\n  Form,\n  FormField,\n  Text,\n  ResponsiveContext,\n} from \"grommet\";\nimport { Atm, Launch, Achievement, Time } from \"grommet-icons\";\nimport { React } from \"react\";\nimport { useState, useContext } from \"react\";\nimport ConnectMetaMask from \"./ConnectMetaMask\";\n\nconst suggestionsBet = [\n  \"1k $ITM\",\n  \"10k $ITM\",\n  \"100k $ITM\",\n  \"1m $ITM\",\n  \"10m $ITM\",\n  \"100m $ITM\",\n];\nconst suggestionsAutoBet = [\"1.2x\", \"1.5x\", \"2x\", \"5x\", \"8x\", \"10x\"];\n\nfunction ControlComponent(props) {\n  const [valueBet, setValueBet] = useState(undefined);\n  const [valueAutoBet, setValueAutoBet] = useState(undefined);\n  const size = useContext(ResponsiveContext);\n\n  const onSuggestionSelectBet = (event) => {\n    switch (event.suggestion) {\n      case \"1k $ITM\":\n        setValueBet(1000);\n        break;\n      case \"10k $ITM\":\n        setValueBet(10000);\n        break;\n      case \"100k $ITM\":\n        setValueBet(100000);\n        break;\n      case \"1m $ITM\":\n        setValueBet(1000000);\n        break;\n      case \"10m $ITM\":\n        setValueBet(10000000);\n        break;\n      case \"100m $ITM\":\n        setValueBet(100000000);\n        break;\n      default:\n        setValueBet(\"\");\n    }\n  };\n\n  const onSuggestionSelectAutoBet = (event) => {\n    switch (event.suggestion) {\n      case \"1.2x\":\n        setValueAutoBet(1.2);\n        break;\n      case \"1.5x\":\n        setValueAutoBet(1.5);\n        break;\n      case \"2x\":\n        setValueAutoBet(2);\n        break;\n      case \"5x\":\n        setValueAutoBet(5);\n        break;\n      case \"8x\":\n        setValueAutoBet(8);\n        break;\n      case \"10x\":\n        setValueAutoBet(10);\n        break;\n      default:\n        setValueAutoBet(\"\");\n    }\n  };\n\n  if (!props.isReady()) {\n    return (\n      <ConnectMetaMask\n        setAccounts={props.setAccounts}\n        setChainId={props.setChainId}\n        setWeb3={props.setWeb3}\n        setInitiatedLogIn={props.setInitiatedLogIn}\n        setLoggedIn={props.setLoggedIn}\n        color={props.color}\n        metaMaskInstalled={props.metaMaskInstalled}\n      />\n    );\n  } else {\n    return (\n      <>\n        {size === \"small\" && (\n          <Box\n            gridArea=\"betting\"\n            background=\"#171717\"\n            align=\"center\"\n            justify=\"center\"\n            round=\"xsmall\"\n            pad=\"large\"\n            border={{ color: \"#1B1B1B\", size: \"large\" }}\n          >\n            <Grid\n              columns={{\n                count: 1,\n                size: \"auto\",\n              }}\n              gap=\"xsmall\"\n            >\n              {props.state === \"BETTING\" && (\n                <>\n                  {props.userPlacedBet === false && (\n                    <Form\n                      gap=\"xsmall\"\n                      onSubmit={({ value }) => {\n                        props.placeBet(value);\n                        setValueBet(undefined);\n                        setValueAutoBet(undefined);\n                      }}\n                    >\n                      <Box\n                        direction=\"column\"\n                        gap=\"xsmall\"\n                        pad=\"xsmall\"\n                        animation={{ type: \"fadeIn\", duration: 390 }}\n                      >\n                        <FormField\n                          required={true}\n                          name=\"betAmount\"\n                          htmlFor=\"textinput-id\"\n                        >\n                          <TextInput\n                            size=\"small\"\n                            name=\"betAmount\"\n                            placeholder=\"Bet Amount\"\n                            suggestions={suggestionsBet}\n                            value={valueBet}\n                            onSuggestionSelect={onSuggestionSelectBet}\n                            onChange={(event) =>\n                              setValueBet(event.target.value)\n                            }\n                            icon={\n                              <Text\n                                weight=\"bold\"\n                                size=\"medium\"\n                                color={props.color}\n                              >\n                                $ITM\n                              </Text>\n                            }\n                            reverse\n                          />\n                        </FormField>\n\n                        <FormField\n                          name=\"autoCashOut\"\n                          size=\"xsmall\"\n                          htmlFor=\"textinput-id\"\n                        >\n                          <TextInput\n                            size=\"small\"\n                            name=\"autoCashOut\"\n                            placeholder=\"Auto Cash Out\"\n                            suggestions={suggestionsAutoBet}\n                            value={valueAutoBet}\n                            onSuggestionSelect={onSuggestionSelectAutoBet}\n                            onChange={(event) =>\n                              setValueAutoBet(event.target.value)\n                            }\n                            icon={\n                              <Text\n                                color={props.color}\n                                weight=\"bold\"\n                                size=\"medium\"\n                              >\n                                x\n                              </Text>\n                            }\n                            reverse\n                          />\n                        </FormField>\n                        <Box animation={[{ type: \"fadeIn\", duration: 390 }]}>\n                          <Button\n                            secondary\n                            fill={true}\n                            type=\"submit\"\n                            icon={<Launch />}\n                            label=\"PLACE BET\"\n                            color={props.color}\n                          />\n                        </Box>\n                      </Box>\n                    </Form>\n                  )}\n                  {props.userPlacedBet === true && (\n                    <Box\n                      direction=\"row\"\n                      gap=\"small\"\n                      alignSelf=\"center\"\n                      justify=\"center\"\n                      pad=\"medium\"\n                      responsive={true}\n                    >\n                      <Box\n                        animation={[{ type: \"fadeIn\", duration: 390 }]}\n                        responsive={true}\n                      >\n                        <Button\n                          secondary\n                          icon={<Time size=\"large\" />}\n                          label={\n                            <Text size=\"large\" textAlign=\"center\">\n                              BE READY! THE GAME STARTS SOON...\n                            </Text>\n                          }\n                          gap=\"small\"\n                          color={props.color}\n                        />\n                      </Box>\n                    </Box>\n                  )}\n                </>\n              )}\n              {props.state === \"PLAYING\" && (\n                <>\n                  {props.userPlacedBet === true && (\n                    <>\n                      {props.userWon === false && props.userCrashed === false && (\n                        <Form>\n                          <Box\n                            direction=\"column\"\n                            gap=\"medium\"\n                            responsive={true}\n                          >\n                            <Button\n                              primary\n                              color={props.cashOutColor}\n                              icon={<Atm />}\n                              label=\"CASH OUT\"\n                              onClick={() => props.initiateCashOut()}\n                            />\n                          </Box>\n                        </Form>\n                      )}\n                      {props.userWon === true && props.userCrashed === false && (\n                        <Box\n                          direction=\"column\"\n                          gap=\"small\"\n                          alignSelf=\"center\"\n                          justify=\"center\"\n                          pad=\"medium\"\n                          animation=\"zoomOut\"\n                          responsive={true}\n                        >\n                          <Button\n                            primary\n                            color={props.color}\n                            label=\"CASHED OUT!\"\n                            gap=\"small\"\n                            icon={<Achievement size=\"medium\" />}\n                          />\n\n                          <Button\n                            secondary\n                            color={props.color}\n                            label={<Text>{props.wonAmount} $ITM</Text>}\n                            gap=\"small\"\n                          />\n                          <Text\n                            weight=\"bold\"\n                            textAlign=\"center\"\n                            color=\"#AAAAAA\"\n                            size=\"small\"\n                          >\n                            You'll receive your $ITM tokens shortly.\n                          </Text>\n                        </Box>\n                      )}\n                    </>\n                  )}\n                  {props.userPlacedBet === false && (\n                    <Box\n                      direction=\"row\"\n                      gap=\"small\"\n                      alignSelf=\"center\"\n                      justify=\"center\"\n                      pad=\"medium\"\n                      responsive={true}\n                    >\n                      <Button\n                        secondary\n                        color={props.color}\n                        label=\"TAKE YOUR CHANCE IN THE NEXT ROUND!\"\n                        gap=\"small\"\n                        round={false}\n                      />\n                    </Box>\n                  )}\n                </>\n              )}\n              {props.state === \"CRASHED\" && (\n                <>\n                  {props.userPlacedBet === true && props.userWon === false && (\n                    <Box\n                      direction=\"column\"\n                      gap=\"small\"\n                      alignSelf=\"center\"\n                      justify=\"center\"\n                      pad=\"medium\"\n                      responsive={true}\n                    >\n                      <Button\n                        secondray\n                        color={props.color}\n                        label=\"CRASHED!\"\n                        gap=\"small\"\n                      />\n                    </Box>\n                  )}\n                  {props.userPlacedBet === true && props.userWon === true && (\n                    <Box\n                      direction=\"column\"\n                      gap=\"small\"\n                      alignSelf=\"center\"\n                      justify=\"center\"\n                      pad=\"medium\"\n                      responsive={true}\n                    >\n                      <Button\n                        primary\n                        color={props.color}\n                        label=\"CASHED OUT!\"\n                        gap=\"small\"\n                        icon={<Achievement size=\"medium\" />}\n                      />\n\n                      <Button\n                        secondary\n                        color={props.color}\n                        label={\n                          <Text size=\"xlarge\">\n                            {props.wonAmount}{\" \"}\n                            <Text size=\"xlarge\" color={props.color}>\n                              $ITM\n                            </Text>\n                          </Text>\n                        }\n                        gap=\"small\"\n                      />\n                      <Text\n                        size=\"medium\"\n                        weight=\"bold\"\n                        textAlign=\"center\"\n                        color=\"#AAAAAA\"\n                      >\n                        You'll receive your{\" \"}\n                        <Text size=\"medium\" color={props.color}>\n                          $ITM\n                        </Text>{\" \"}\n                        tokens shortly.\n                      </Text>\n                    </Box>\n                  )}\n                  {props.userPlacedBet === false && (\n                    <Box\n                      direction=\"row\"\n                      gap=\"small\"\n                      alignSelf=\"center\"\n                      justify=\"center\"\n                      pad=\"medium\"\n                      responsive={true}\n                    >\n                      <Button\n                        secondary\n                        color={props.color}\n                        label=\"TAKE YOUR CHANCE IN THE NEXT ROUND!\"\n                        gap=\"small\"\n                      />\n                    </Box>\n                  )}\n                </>\n              )}\n            </Grid>\n          </Box>\n        )}\n        {size === \"medium\" && (\n          <Box\n            gridArea=\"betting\"\n            background=\"#171717\"\n            align=\"center\"\n            justify=\"center\"\n            round=\"xsmall\"\n            pad=\"medium\"\n            border={{ color: \"#1B1B1B\", size: \"large\" }}\n          >\n            <Grid\n              columns={{\n                count: 1,\n                size: \"auto\",\n              }}\n              gap=\"xsmall\"\n            >\n              {props.state === \"BETTING\" && (\n                <>\n                  {props.userPlacedBet === false && (\n                    <Form\n                      onSubmit={({ value }) => {\n                        props.placeBet(value);\n                        setValueBet(undefined);\n                        setValueAutoBet(undefined);\n                      }}\n                    >\n                      <Box\n                        direction=\"column\"\n                        gap=\"xxsmall\"\n                        pad=\"xsmall\"\n                        animation={{ type: \"fadeIn\", duration: 390 }}\n                      >\n                        <FormField\n                          required={true}\n                          name=\"betAmount\"\n                          htmlFor=\"textinput-id\"\n                        >\n                          <TextInput\n                            size=\"small\"\n                            name=\"betAmount\"\n                            placeholder=\"Bet Amount\"\n                            suggestions={suggestionsBet}\n                            value={valueBet}\n                            onSuggestionSelect={onSuggestionSelectBet}\n                            onChange={(event) =>\n                              setValueBet(event.target.value)\n                            }\n                            icon={\n                              <Text\n                                color={props.color}\n                                weight=\"bold\"\n                                size=\"medium\"\n                              >\n                                $ITM\n                              </Text>\n                            }\n                            reverse\n                          />\n                        </FormField>\n                        <FormField name=\"autoCashOut\" htmlFor=\"textinput-id\">\n                          <TextInput\n                            name=\"autoCashOut\"\n                            size=\"small\"\n                            placeholder=\"Auto Cash Out\"\n                            suggestions={suggestionsAutoBet}\n                            value={valueAutoBet}\n                            onSuggestionSelect={onSuggestionSelectAutoBet}\n                            onChange={(event) =>\n                              setValueAutoBet(event.target.value)\n                            }\n                            icon={\n                              <Text\n                                color={props.color}\n                                weight=\"bold\"\n                                size=\"medium\"\n                              >\n                                x\n                              </Text>\n                            }\n                            reverse\n                          />\n                        </FormField>\n                        <Box gap=\"small\" animation={[{ type: \"zoomOut\" }]}>\n                          <Button\n                            secondary\n                            fill={true}\n                            type=\"submit\"\n                            icon={<Launch />}\n                            label=\"PLACE BET\"\n                            color={props.color}\n                          />\n\n                          <Button\n                            primary\n                            color={props.cashOutColor}\n                            icon={<Atm />}\n                            label=\"CASH OUT\"\n                            disabled={true}\n                          />\n                        </Box>\n                      </Box>\n                    </Form>\n                  )}\n                  {props.userPlacedBet === true && (\n                    <Box\n                      direction=\"row\"\n                      gap=\"small\"\n                      alignSelf=\"center\"\n                      justify=\"center\"\n                      pad=\"medium\"\n                      responsive={true}\n                    >\n                      <Box responsive={true}>\n                        <Button\n                          secondary\n                          color={props.color}\n                          icon={<Time size=\"large\" />}\n                          label={\n                            <Text textAlign=\"center\" size=\"small\">\n                              BE READY! THE GAME STARTS SOON...\n                            </Text>\n                          }\n                          gap=\"small\"\n                        />\n                      </Box>\n                    </Box>\n                  )}\n                </>\n              )}\n              {props.state === \"PLAYING\" && (\n                <>\n                  {props.userPlacedBet === true && (\n                    <>\n                      {props.userWon === false && props.userCrashed === false && (\n                        <Form>\n                          <Box\n                            direction=\"column\"\n                            gap=\"xxsmall\"\n                            responsive={true}\n                          >\n                            <FormField name=\"betAmount\">\n                              <TextInput\n                                name=\"betAmount\"\n                                size=\"small\"\n                                placeholder=\"Bet Amount\"\n                                disabled={true}\n                                value={valueBet}\n                                icon={\n                                  <Text\n                                    color=\"#434343\"\n                                    weight=\"bold\"\n                                    size=\"medium\"\n                                  >\n                                    $ITM\n                                  </Text>\n                                }\n                                reverse\n                              />\n                            </FormField>\n                            <FormField name=\"autoCashOut\">\n                              <TextInput\n                                name=\"autoCashOut\"\n                                size=\"small\"\n                                placeholder=\"Auto Cash Out\"\n                                disabled={true}\n                                value={valueAutoBet}\n                                icon={\n                                  <Text\n                                    color=\"#434343\"\n                                    weight=\"bold\"\n                                    size=\"medium\"\n                                  >\n                                    x\n                                  </Text>\n                                }\n                                reverse\n                              />\n                            </FormField>\n                            <Box gap=\"small\" animation={[{ type: \"zoomOut\" }]}>\n                              <Button\n                                secondary\n                                type=\"submit\"\n                                icon={<Launch />}\n                                label=\"PLACE BET\"\n                                disabled={true}\n                              />\n\n                              <Button\n                                primary\n                                color={props.cashOutColor}\n                                icon={<Atm />}\n                                label=\"CASH OUT\"\n                                onClick={() => props.initiateCashOut()}\n                              />\n                            </Box>\n                          </Box>\n                        </Form>\n                      )}\n                      {props.userWon === true && props.userCrashed === false && (\n                        <Box\n                          direction=\"column\"\n                          gap=\"small\"\n                          alignSelf=\"center\"\n                          justify=\"center\"\n                          pad=\"small\"\n                          animation=\"zoomOut\"\n                          responsive={true}\n                        >\n                          <Button\n                            primary\n                            color={props.color}\n                            label={<Text size=\"medium\">CASHED OUT!</Text>}\n                            gap=\"small\"\n                            icon={<Achievement size=\"medium\" />}\n                          />\n\n                          <Button\n                            secondary\n                            color={props.color}\n                            label={\n                              <Text size=\"medium\">\n                                {props.wonAmount}{\" \"}\n                                <Text size=\"medium\" color={props.color}>\n                                  $ITM\n                                </Text>\n                              </Text>\n                            }\n                            gap=\"small\"\n                          />\n                          <Text\n                            size=\"small\"\n                            weight=\"bold\"\n                            textAlign=\"center\"\n                            color=\"#AAAAAA\"\n                          >\n                            You'll receive your{\" \"}\n                            <Text size=\"small\" color={props.color}>\n                              $ITM\n                            </Text>{\" \"}\n                            tokens shortly.\n                          </Text>\n                        </Box>\n                      )}\n                    </>\n                  )}\n                  {props.userPlacedBet === false && (\n                    <Box\n                      direction=\"row\"\n                      gap=\"small\"\n                      alignSelf=\"center\"\n                      justify=\"center\"\n                      pad=\"medium\"\n                      responsive={true}\n                    >\n                      <Button\n                        secondary\n                        color={props.color}\n                        label=\"TAKE YOUR CHANCE IN THE NEXT ROUND!\"\n                        gap=\"small\"\n                        round={false}\n                      />\n                    </Box>\n                  )}\n                </>\n              )}\n              {props.state === \"CRASHED\" && (\n                <>\n                  {props.userPlacedBet === true && props.userWon === false && (\n                    <Box\n                      direction=\"column\"\n                      gap=\"small\"\n                      alignSelf=\"center\"\n                      justify=\"center\"\n                      pad=\"medium\"\n                      responsive={true}\n                    >\n                      <Button\n                        secondray\n                        color={props.cashOutColor}\n                        label={<Text size=\"xlarge\">CRASHED!</Text>}\n                        gap=\"small\"\n                      />\n                    </Box>\n                  )}\n                  {props.userPlacedBet === true && props.userWon === true && (\n                    <Box\n                      direction=\"column\"\n                      gap=\"small\"\n                      alignSelf=\"center\"\n                      justify=\"center\"\n                      pad=\"small\"\n                      animation=\"zoomOut\"\n                      responsive={true}\n                    >\n                      <Button\n                        primary\n                        color={props.color}\n                        label={<Text size=\"medium\">CASHED OUT!</Text>}\n                        gap=\"small\"\n                        icon={<Achievement size=\"medium\" />}\n                      />\n\n                      <Button\n                        secondary\n                        color={props.color}\n                        label={\n                          <Text size=\"medium\">\n                            {props.wonAmount}{\" \"}\n                            <Text size=\"medium\" color={props.color}>\n                              $ITM\n                            </Text>\n                          </Text>\n                        }\n                        gap=\"small\"\n                      />\n                      <Text\n                        size=\"small\"\n                        weight=\"bold\"\n                        textAlign=\"center\"\n                        color=\"#AAAAAA\"\n                      >\n                        You'll receive your{\" \"}\n                        <Text size=\"small\" color={props.color}>\n                          $ITM\n                        </Text>{\" \"}\n                        tokens shortly.\n                      </Text>\n                    </Box>\n                  )}\n                  {props.userPlacedBet === false && (\n                    <Box\n                      direction=\"row\"\n                      gap=\"small\"\n                      alignSelf=\"center\"\n                      justify=\"center\"\n                      pad=\"medium\"\n                      responsive={true}\n                    >\n                      <Button\n                        secondary\n                        color={props.color}\n                        label=\"TAKE YOUR CHANCE IN THE NEXT ROUND!\"\n                        gap=\"small\"\n                      />\n                    </Box>\n                  )}\n                </>\n              )}\n            </Grid>\n          </Box>\n        )}\n        {(size === \"large\" || size === \"xlarge\") && (\n          <Box\n            gridArea=\"betting\"\n            background=\"#171717\"\n            align=\"center\"\n            justify=\"center\"\n            round=\"xsmall\"\n            pad=\"medium\"\n            border={{ color: \"#1B1B1B\", size: \"large\" }}\n          >\n            <Grid\n              columns={{\n                count: 1,\n                size: \"auto\",\n              }}\n              gap=\"xsmall\"\n            >\n              {props.state === \"BETTING\" && (\n                <>\n                  {props.userPlacedBet === false && (\n                    <Form\n                      onSubmit={({ value }) => {\n                        props.placeBet(value);\n                        setValueBet(undefined);\n                        setValueAutoBet(undefined);\n                      }}\n                    >\n                      <Box\n                        direction=\"column\"\n                        gap=\"small\"\n                        pad=\"xsmall\"\n                        animation={{ type: \"fadeIn\", duration: 390 }}\n                      >\n                        <FormField\n                          required={true}\n                          name=\"betAmount\"\n                          htmlFor=\"textinput-id\"\n                        >\n                          <TextInput\n                            name=\"betAmount\"\n                            placeholder=\"Bet Amount\"\n                            suggestions={suggestionsBet}\n                            value={valueBet}\n                            onSuggestionSelect={onSuggestionSelectBet}\n                            onChange={(event) =>\n                              setValueBet(event.target.value)\n                            }\n                            icon={\n                              <Text\n                                color={props.color}\n                                weight=\"bold\"\n                                size=\"large\"\n                              >\n                                $ITM\n                              </Text>\n                            }\n                            reverse\n                          />\n                        </FormField>\n                        <FormField name=\"autoCashOut\" htmlFor=\"textinput-id\">\n                          <TextInput\n                            name=\"autoCashOut\"\n                            placeholder=\"Auto Cash Out\"\n                            suggestions={suggestionsAutoBet}\n                            value={valueAutoBet}\n                            onSuggestionSelect={onSuggestionSelectAutoBet}\n                            onChange={(event) =>\n                              setValueAutoBet(event.target.value)\n                            }\n                            icon={\n                              <Text\n                                color={props.color}\n                                weight=\"bold\"\n                                size=\"large\"\n                              >\n                                x\n                              </Text>\n                            }\n                            reverse\n                          />\n                        </FormField>\n                        <Box animation={[{ type: \"zoomOut\" }]}>\n                          <Button\n                            secondary\n                            fill={true}\n                            type=\"submit\"\n                            icon={<Launch />}\n                            label=\"PLACE BET\"\n                            color={props.color}\n                          />\n                        </Box>\n                        <Button\n                          primary\n                          color={props.cashOutColor}\n                          icon={<Atm />}\n                          label=\"CASH OUT\"\n                          disabled={true}\n                        />\n                      </Box>\n                    </Form>\n                  )}\n                  {props.userPlacedBet === true && (\n                    <Box\n                      direction=\"row\"\n                      gap=\"small\"\n                      alignSelf=\"center\"\n                      justify=\"center\"\n                      pad=\"medium\"\n                      responsive={true}\n                    >\n                      <Box responsive={true}>\n                        <Button\n                          secondary\n                          color={props.color}\n                          icon={<Time size=\"large\" />}\n                          label={\n                            <Text size=\"large\" textAlign=\"center\">\n                              BE READY! THE GAME STARTS SOON...\n                            </Text>\n                          }\n                          gap=\"small\"\n                        />\n                      </Box>\n                    </Box>\n                  )}\n                </>\n              )}\n              {props.state === \"PLAYING\" && (\n                <>\n                  {props.userPlacedBet === true && (\n                    <>\n                      {props.userWon === false && props.userCrashed === false && (\n                        <Form>\n                          <Box direction=\"column\" gap=\"small\" responsive={true}>\n                            <FormField name=\"betAmount\">\n                              <TextInput\n                                name=\"betAmount\"\n                                placeholder=\"Bet Amount\"\n                                disabled={true}\n                                value={valueBet}\n                                icon={\n                                  <Text\n                                    color=\"#434343\"\n                                    weight=\"bold\"\n                                    size=\"large\"\n                                  >\n                                    $ITM\n                                  </Text>\n                                }\n                                reverse\n                              />\n                            </FormField>\n                            <FormField name=\"autoCashOut\">\n                              <TextInput\n                                name=\"autoCashOut\"\n                                placeholder=\"Auto Cash Out\"\n                                disabled={true}\n                                value={valueAutoBet}\n                                icon={\n                                  <Text\n                                    color=\"#434343\"\n                                    weight=\"bold\"\n                                    size=\"large\"\n                                  >\n                                    x\n                                  </Text>\n                                }\n                                reverse\n                              />\n                            </FormField>\n                            <Button\n                              secondary\n                              type=\"submit\"\n                              icon={<Launch />}\n                              label=\"PLACE BET\"\n                              disabled={true}\n                            />\n\n                            <Button\n                              primary\n                              color={props.cashOutColor}\n                              icon={<Atm />}\n                              label=\"CASH OUT\"\n                              onClick={() => props.initiateCashOut()}\n                            />\n                          </Box>\n                        </Form>\n                      )}\n                      {props.userWon === true && props.userCrashed === false && (\n                        <Box\n                          direction=\"column\"\n                          gap=\"small\"\n                          alignSelf=\"center\"\n                          justify=\"center\"\n                          pad=\"medium\"\n                          animation=\"zoomOut\"\n                          responsive={true}\n                        >\n                          <Button\n                            primary\n                            color={props.color}\n                            label=\"CASHED OUT!\"\n                            gap=\"small\"\n                            icon={<Achievement size=\"medium\" />}\n                          />\n\n                          <Button\n                            secondary\n                            color={props.color}\n                            label={\n                              <Text size=\"xlarge\">\n                                {props.wonAmount}{\" \"}\n                                <Text size=\"xlarge\" color={props.color}>\n                                  $ITM\n                                </Text>\n                              </Text>\n                            }\n                            gap=\"small\"\n                          />\n                          <Text\n                            size=\"medium\"\n                            weight=\"bold\"\n                            textAlign=\"center\"\n                            color=\"#AAAAAA\"\n                          >\n                            You'll receive your{\" \"}\n                            <Text color={props.color} size=\"medium\">\n                              $ITM\n                            </Text>{\" \"}\n                            tokens shortly.\n                          </Text>\n                        </Box>\n                      )}\n                    </>\n                  )}\n                  {props.userPlacedBet === false && (\n                    <Box\n                      direction=\"row\"\n                      gap=\"small\"\n                      alignSelf=\"center\"\n                      justify=\"center\"\n                      pad=\"medium\"\n                      responsive={true}\n                    >\n                      <Button\n                        secondary\n                        color={props.color}\n                        label=\"TAKE YOUR CHANCE IN THE NEXT ROUND!\"\n                        gap=\"small\"\n                        round={false}\n                      />\n                    </Box>\n                  )}\n                </>\n              )}\n              {props.state === \"CRASHED\" && (\n                <>\n                  {props.userPlacedBet === true && props.userWon === false && (\n                    <Box\n                      direction=\"column\"\n                      gap=\"small\"\n                      alignSelf=\"center\"\n                      justify=\"center\"\n                      pad=\"medium\"\n                      responsive={true}\n                    >\n                      <Button\n                        secondray\n                        color={props.cashOutColor}\n                        label=\"CRASHED!\"\n                        gap=\"small\"\n                      />\n                    </Box>\n                  )}\n                  {props.userPlacedBet === true && props.userWon === true && (\n                    <Box\n                      direction=\"column\"\n                      gap=\"small\"\n                      alignSelf=\"center\"\n                      justify=\"center\"\n                      pad=\"medium\"\n                      responsive={true}\n                    >\n                      <Button\n                        primary\n                        color={props.color}\n                        label=\"CASHED OUT!\"\n                        gap=\"small\"\n                        icon={<Achievement size=\"medium\" />}\n                      />\n\n                      <Button\n                        secondary\n                        color={props.color}\n                        label={\n                          <Text size=\"xlarge\">\n                            {props.wonAmount}{\" \"}\n                            <Text size=\"xlarge\" color={props.color}>\n                              $ITM\n                            </Text>\n                          </Text>\n                        }\n                        gap=\"small\"\n                      />\n                      <Text\n                        size=\"medium\"\n                        weight=\"bold\"\n                        textAlign=\"center\"\n                        color=\"#AAAAAA\"\n                      >\n                        You'll receive your{\" \"}\n                        <Text color={props.color} size=\"medium\">\n                          $ITM\n                        </Text>{\" \"}\n                        tokens shortly.\n                      </Text>\n                    </Box>\n                  )}\n                  {props.userPlacedBet === false && (\n                    <Box\n                      direction=\"row\"\n                      gap=\"small\"\n                      alignSelf=\"center\"\n                      justify=\"center\"\n                      pad=\"medium\"\n                      responsive={true}\n                    >\n                      <Button\n                        secondary\n                        color={props.color}\n                        label=\"TAKE YOUR CHANCE IN THE NEXT ROUND!\"\n                        gap=\"small\"\n                      />\n                    </Box>\n                  )}\n                </>\n              )}\n            </Grid>\n          </Box>\n        )}\n      </>\n    );\n  }\n}\n\nexport default ControlComponent;\n","import { Box, DataTable, Text, Meter, ResponsiveContext } from \"grommet\";\nimport { React } from \"react\";\nimport { useState, useContext } from \"react\";\n\nfunction ResultTableComponent(props) {\n  const [sort, setSort] = useState({\n    property: \"bet\",\n    direction: \"desc\",\n  });\n  const size = useContext(ResponsiveContext);\n\n  return (\n    <>\n      {size === \"small\" && (\n        <Box\n          gridArea=\"resultTable\"\n          background=\"#1B1B1B\"\n          align=\"center\"\n          pad=\"small\"\n          round=\"xsmall\"\n          animation={{ type: \"fadeIn\", duration: 390 }}\n        >\n          <Box overflow=\"auto\" fill={true} background=\"#171717\">\n            <DataTable\n              alignSelf=\"center\"\n              step={50}\n              show={10}\n              sort={sort}\n              onSort={setSort}\n              background={{\n                header: { color: \"#171717\", opacity: \"medium\" },\n                body: [\"#171717\", \"#1E1E1E\"],\n                footer: { color: \"dark-3\", opacity: \"strong\" },\n              }}\n              columns={[\n                {\n                  property: \"user\",\n\n                  header: (\n                    <Text weight=\"bold\" size=\"9px\">\n                      USER\n                    </Text>\n                  ),\n                  primary: true,\n                  verticalAlign: \"middle\",\n                  render: function (datum) {\n                    return (\n                      <Text truncate weight=\"bold\" color=\"#EDEDED\" size=\"8px\">\n                        {datum.user}\n                      </Text>\n                    );\n                  },\n                },\n                {\n                  property: \"at\",\n                  header: (\n                    <Text weight=\"bold\" size=\"9px\">\n                      @\n                    </Text>\n                  ),\n                  primary: false,\n                  verticalAlign: \"middle\",\n                  render: function (datum) {\n                    if (datum.profit >= 0) {\n                      return (\n                        <Text truncate weight=\"bold\" color=\"#00C781\" size=\"8px\">\n                          {datum.at}\n                        </Text>\n                      );\n                    } else {\n                      return (\n                        <Text truncate weight=\"bold\" color=\"#FF4040\" size=\"8px\">\n                          {datum.at}\n                        </Text>\n                      );\n                    }\n                  },\n                },\n                {\n                  property: \"bet\",\n                  header: (\n                    <Text weight=\"bold\" size=\"9px\">\n                      BET\n                    </Text>\n                  ),\n                  primary: false,\n                  verticalAlign: \"middle\",\n                  render: function (datum) {\n                    return (\n                      <Text truncate weight=\"bold\" color=\"#EDEDED\" size=\"8px\">\n                        {datum.bet}\n                      </Text>\n                    );\n                  },\n                },\n                {\n                  property: \"profit\",\n                  header: (\n                    <Text weight=\"bold\" size=\"9px\">\n                      PROFIT\n                    </Text>\n                  ),\n                  primary: false,\n                  verticalAlign: \"middle\",\n                  render: function (datum) {\n                    if (datum.profit >= 0) {\n                      return (\n                        <Text truncate weight=\"bold\" color=\"#00C781\" size=\"8px\">\n                          {datum.profit}\n                        </Text>\n                      );\n                    } else {\n                      return (\n                        <Text truncate weight=\"bold\" color=\"#FF4040\" size=\"8px\">\n                          {datum.profit}\n                        </Text>\n                      );\n                    }\n                  },\n                },\n                {\n                  property: \"bravery\",\n                  header: (\n                    <Text weight=\"bold\" size=\"9px\">\n                      BRAVERY\n                    </Text>\n                  ),\n                  verticalAlign: \"middle\",\n                  render: (datum) => (\n                    <Box pad={{ vertical: \"xsmall\" }}>\n                      <Meter\n                        values={[{ value: datum.bravery, color: props.color }]}\n                        thickness=\"small\"\n                        size=\"xxsmall\"\n                        background=\"#1B1B1B\"\n                      />\n                    </Box>\n                  ),\n                },\n              ]}\n              data={props.resultTableAll}\n            />\n          </Box>\n        </Box>\n      )}\n      {size === \"medium\" && (\n        <Box\n          gridArea=\"resultTable\"\n          background=\"#1B1B1B\"\n          align=\"center\"\n          pad=\"small\"\n          round=\"xsmall\"\n          animation={{ type: \"fadeIn\", duration: 390 }}\n        >\n          <Box overflow=\"auto\" fill={true} background=\"#171717\">\n            <DataTable\n              alignSelf=\"center\"\n              step={50}\n              show={10}\n              sort={sort}\n              onSort={setSort}\n              background={{\n                header: { color: \"#171717\", opacity: \"medium\" },\n                body: [\"#171717\", \"#1E1E1E\"],\n                footer: { color: \"dark-3\", opacity: \"strong\" },\n              }}\n              columns={[\n                {\n                  property: \"user\",\n                  header: (\n                    <Text weight=\"bold\" size=\"small\">\n                      USER\n                    </Text>\n                  ),\n                  primary: true,\n                  verticalAlign: \"middle\",\n                  render: function (datum) {\n                    return (\n                      <Text\n                        truncate\n                        weight=\"bold\"\n                        color=\"#EDEDED\"\n                        size=\"xsmall\"\n                      >\n                        {datum.user}\n                      </Text>\n                    );\n                  },\n                },\n                {\n                  property: \"at\",\n                  header: (\n                    <Text weight=\"bold\" size=\"small\">\n                      @\n                    </Text>\n                  ),\n                  primary: false,\n                  verticalAlign: \"middle\",\n                  render: function (datum) {\n                    if (datum.profit >= 0) {\n                      return (\n                        <Text\n                          truncate\n                          weight=\"bold\"\n                          color=\"#00C781\"\n                          size=\"xsmall\"\n                        >\n                          {datum.at}\n                        </Text>\n                      );\n                    } else {\n                      return (\n                        <Text\n                          truncate\n                          weight=\"bold\"\n                          color=\"#FF4040\"\n                          size=\"xsmall\"\n                        >\n                          {datum.at}\n                        </Text>\n                      );\n                    }\n                  },\n                },\n                {\n                  property: \"bet\",\n                  header: (\n                    <Text weight=\"bold\" size=\"small\">\n                      BET\n                    </Text>\n                  ),\n                  primary: false,\n                  verticalAlign: \"middle\",\n                  render: function (datum) {\n                    return (\n                      <Text\n                        truncate\n                        weight=\"bold\"\n                        color=\"#EDEDED\"\n                        size=\"xsmall\"\n                      >\n                        {datum.bet}\n                      </Text>\n                    );\n                  },\n                },\n                {\n                  property: \"profit\",\n                  header: (\n                    <Text weight=\"bold\" size=\"small\">\n                      PROFIT\n                    </Text>\n                  ),\n                  primary: false,\n                  verticalAlign: \"middle\",\n                  render: function (datum) {\n                    if (datum.profit >= 0) {\n                      return (\n                        <Text\n                          truncate\n                          weight=\"bold\"\n                          color=\"#00C781\"\n                          size=\"xsmall\"\n                        >\n                          {datum.profit}\n                        </Text>\n                      );\n                    } else {\n                      return (\n                        <Text\n                          truncate\n                          weight=\"bold\"\n                          color=\"#FF4040\"\n                          size=\"xsmall\"\n                        >\n                          {datum.profit}\n                        </Text>\n                      );\n                    }\n                  },\n                },\n                {\n                  property: \"bravery\",\n                  header: (\n                    <Text weight=\"bold\" size=\"small\">\n                      BRAVERY\n                    </Text>\n                  ),\n                  verticalAlign: \"middle\",\n                  render: (datum) => (\n                    <Box pad={{ vertical: \"xsmall\" }}>\n                      <Meter\n                        values={[{ value: datum.bravery, color: props.color }]}\n                        thickness=\"small\"\n                        size=\"small\"\n                        background=\"#1B1B1B\"\n                      />\n                    </Box>\n                  ),\n                },\n              ]}\n              data={props.resultTableAll}\n            />\n          </Box>\n        </Box>\n      )}\n      {(size === \"large\" || size === \"xlarge\") && (\n        <Box\n          gridArea=\"resultTable\"\n          background=\"#1B1B1B\"\n          align=\"center\"\n          pad=\"small\"\n          round=\"xsmall\"\n          animation={{ type: \"fadeIn\", duration: 390 }}\n        >\n          <Box overflow=\"auto\" fill={true} background=\"#171717\">\n            <DataTable\n              alignSelf=\"center\"\n              step={50}\n              show={10}\n              sort={sort}\n              onSort={setSort}\n              background={{\n                header: { color: \"#171717\", opacity: \"medium\" },\n                body: [\"#171717\", \"#1E1E1E\"],\n                footer: { color: \"dark-3\", opacity: \"strong\" },\n              }}\n              columns={[\n                {\n                  property: \"user\",\n                  header: <Text weight=\"bold\">USER</Text>,\n                  primary: true,\n                  verticalAlign: \"middle\",\n                  render: function (datum) {\n                    return (\n                      <Text truncate weight=\"bold\" color=\"#EDEDED\">\n                        {datum.user}\n                      </Text>\n                    );\n                  },\n                },\n                {\n                  property: \"at\",\n                  header: <Text weight=\"bold\">@</Text>,\n                  primary: false,\n                  verticalAlign: \"middle\",\n                  render: function (datum) {\n                    if (datum.profit >= 0) {\n                      return (\n                        <Text truncate weight=\"bold\" color=\"#00C781\">\n                          {datum.at}\n                        </Text>\n                      );\n                    } else {\n                      return (\n                        <Text truncate weight=\"bold\" color=\"#FF4040\">\n                          {datum.at}\n                        </Text>\n                      );\n                    }\n                  },\n                },\n                {\n                  property: \"bet\",\n                  header: <Text weight=\"bold\">BET</Text>,\n                  primary: false,\n                  verticalAlign: \"middle\",\n                  render: function (datum) {\n                    return (\n                      <Text truncate weight=\"bold\" color=\"#EDEDED\">\n                        {datum.bet}\n                      </Text>\n                    );\n                  },\n                },\n                {\n                  property: \"profit\",\n                  header: <Text weight=\"bold\">PROFIT</Text>,\n                  primary: false,\n                  verticalAlign: \"middle\",\n                  render: function (datum) {\n                    if (datum.profit >= 0) {\n                      return (\n                        <Text truncate weight=\"bold\" color=\"#00C781\">\n                          {datum.profit}\n                        </Text>\n                      );\n                    } else {\n                      return (\n                        <Text truncate weight=\"bold\" color=\"#FF4040\">\n                          {datum.profit}\n                        </Text>\n                      );\n                    }\n                  },\n                },\n                {\n                  property: \"bravery\",\n                  header: <Text weight=\"bold\">BRAVERY</Text>,\n                  verticalAlign: \"middle\",\n                  render: (datum) => (\n                    <Box pad={{ vertical: \"xsmall\" }}>\n                      <Meter\n                        values={[{ value: datum.bravery, color: props.color }]}\n                        thickness=\"small\"\n                        size=\"small\"\n                        background=\"#1B1B1B\"\n                      />\n                    </Box>\n                  ),\n                },\n              ]}\n              data={props.resultTableAll}\n            />\n          </Box>\n        </Box>\n      )}\n    </>\n  );\n}\n\nexport default ResultTableComponent;\n","import React from \"react\";\nimport { TableRow, TableCell, Text, ResponsiveContext } from \"grommet\";\nimport { Grommet } from \"grommet\";\nimport \"./App.css\";\n\nconst customTheme = {\n  table: {\n    body: {\n      pad: { vertical: \"xxxsmall\", horizontal: \"xxsmall\" },\n    },\n  },\n};\n\nclass ChatMessages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recentMessages: [],\n    };\n  }\n\n  componentDidMount() {\n    this.props.socket.on(\"messaging\", (receivedMessages) => {\n      if (this.state.recentMessages !== receivedMessages) {\n        this.setState({ recentMessages: receivedMessages });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.socket.off(\"messaging\");\n  }\n\n  render() {\n    return (\n      <>\n        <ResponsiveContext.Consumer>\n          {(size) =>\n            size === \"small\" && (\n              <div className=\"messageBox\">\n                <Grommet theme={customTheme}>\n                  {this.state.recentMessages &&\n                    this.state.recentMessages.map((d) => (\n                      <TableRow>\n                        <TableCell size=\"xxxsmall\" key={d.id}>\n                          <TableCell key={d.id}>\n                            <Text\n                              color={this.props.color}\n                              size=\"12px\"\n                              weight=\"bold\"\n                            >\n                              {d.username}:{\" \"}\n                            </Text>\n                            <Text size=\"12px\">{d.message}</Text>\n                          </TableCell>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </Grommet>\n              </div>\n            )\n          }\n        </ResponsiveContext.Consumer>\n        <ResponsiveContext.Consumer>\n          {(size) =>\n            size === \"medium\" && (\n              <div className=\"messageBox\">\n                <Grommet theme={customTheme}>\n                  {this.state.recentMessages &&\n                    this.state.recentMessages.map((d) => (\n                      <TableRow>\n                        <TableCell size=\"xxxsmall\" key={d.id}>\n                          <TableCell key={d.id}>\n                            <Text\n                              color={this.props.color}\n                              size=\"xsmall\"\n                              weight=\"bold\"\n                            >\n                              {d.username}:{\" \"}\n                            </Text>\n                            <Text size=\"xsmall\">{d.message}</Text>\n                          </TableCell>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </Grommet>\n              </div>\n            )\n          }\n        </ResponsiveContext.Consumer>\n        <ResponsiveContext.Consumer>\n          {(size) =>\n            (size === \"large\" || size === \"xlarge\") && (\n              <div className=\"messageBox\">\n                <Grommet theme={customTheme}>\n                  {this.state.recentMessages &&\n                    this.state.recentMessages.map((d) => (\n                      <TableRow>\n                        <TableCell size=\"xxxsmall\" key={d.id}>\n                          <TableCell key={d.id}>\n                            <Text\n                              color={this.props.color}\n                              size=\"small\"\n                              weight=\"bold\"\n                            >\n                              {d.username}:{\" \"}\n                            </Text>\n                            <Text size=\"small\">{d.message}</Text>\n                          </TableCell>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </Grommet>\n              </div>\n            )\n          }\n        </ResponsiveContext.Consumer>\n      </>\n    );\n  }\n}\n\nexport default ChatMessages;\n","import {\n  Box,\n  Grid,\n  Button,\n  TextInput,\n  Form,\n  ResponsiveContext,\n  Text,\n} from \"grommet\";\nimport { Send, ChatOption } from \"grommet-icons\";\nimport { React, useState, useContext } from \"react\";\nimport \"./App.css\";\nimport ChatMessages from \"./ChatMessages.js\";\n\nfunction ChatComponent(props) {\n  const [value, setValue] = useState(\"\");\n  const size = useContext(ResponsiveContext);\n\n  return (\n    <>\n      {size === \"small\" && (\n        <Box\n          gridArea=\"chat\"\n          background=\"#1B1B1B\"\n          justify=\"center\"\n          fill={true}\n          round=\"xsmall\"\n          pad=\"small\"\n          animation=\"zoomOut\"\n        >\n          <Box fill={true}>\n            <Grid\n              rows={[\"small\", \"xxsmall\"]}\n              columns={[\"auto\"]}\n              areas={[\n                { name: \"messagingBox\", start: [0, 0], end: [0, 0] },\n                { name: \"sendingBox\", start: [0, 1], end: [0, 1] },\n              ]}\n              gap=\"small\"\n            >\n              {props.isReady() === true && props.userName === \"\" && (\n                <>\n                  <Box\n                    justify=\"center\"\n                    align=\"center\"\n                    gap=\"small\"\n                    responsive={true}\n                    background=\"#171717\"\n                  >\n                    <Form\n                      onSubmit={({ value }) => {\n                        props.addPlayer(value.username);\n                      }}\n                    >\n                      <Box\n                        direction=\"row\"\n                        gap=\"small\"\n                        animation=\"fadeIn\"\n                        responsive={true}\n                      >\n                        <TextInput\n                          name=\"username\"\n                          placeholder=\"Type Username...\"\n                          size=\"xsmall\"\n                        />\n                        <Button\n                          secondary\n                          type=\"submit\"\n                          icon={<ChatOption />}\n                          label=\"CHAT!\"\n                          alignSelf=\"stretch\"\n                          color={props.color}\n                        />\n                      </Box>\n                    </Form>\n                  </Box>\n\n                  <Form\n                    onSubmit={({ value }) => {\n                      props.setMessage(value.message);\n                      setValue(\"\");\n                    }}\n                  >\n                    <Box\n                      gridArea=\"sendingBox\"\n                      direction=\"row\"\n                      gap=\"small\"\n                      fill={true}\n                      animation=\"fadeIn\"\n                      responsive={true}\n                    >\n                      <TextInput\n                        placeholder=\"Choose a username!\"\n                        size=\"small\"\n                        name=\"message\"\n                        value={value}\n                        onChange={(event) => setValue(event.target.value)}\n                        disabled={true}\n                      />\n                      <Button\n                        secondary\n                        type=\"submit\"\n                        icon={<Send />}\n                        label={<Text size=\"small\">SEND</Text>}\n                        disabled={true}\n                        color={props.color}\n                        margin={{ bottom: \"3px\" }}\n                      />\n                    </Box>\n                  </Form>\n                </>\n              )}\n              {props.userName !== \"\" && props.isReady() === true && (\n                <>\n                  <Box animation=\"fadeIn\" responsive={true}>\n                    <ChatMessages socket={props.socket} color={props.color} />\n                  </Box>\n                  <Form\n                    onSubmit={({ value }) => {\n                      props.setMessage(value.message);\n                      setValue(\"\");\n                    }}\n                  >\n                    <Box\n                      gridArea=\"sendingBox\"\n                      direction=\"row\"\n                      gap=\"small\"\n                      fill={true}\n                      justify=\"center\"\n                      animation=\"fadeIn\"\n                    >\n                      <TextInput\n                        placeholder=\"Type Here...\"\n                        size=\"small\"\n                        name=\"message\"\n                        value={value}\n                        onChange={(event) => setValue(event.target.value)}\n                      />\n                      <Button\n                        secondary\n                        type=\"submit\"\n                        icon={<Send />}\n                        label={<Text size=\"small\">SEND</Text>}\n                        color={props.color}\n                        margin={{ bottom: \"3px\" }}\n                      />\n                    </Box>\n                  </Form>\n                </>\n              )}\n              {props.userName === \"\" && props.isReady() === false && (\n                <>\n                  <ChatMessages socket={props.socket} color={props.color} />\n\n                  <Box\n                    gridArea=\"sendingBox\"\n                    direction=\"row\"\n                    gap=\"small\"\n                    fill={true}\n                    justify=\"center\"\n                    animation=\"fadeIn\"\n                    responsive={true}\n                  >\n                    <TextInput\n                      placeholder=\"Connect first!\"\n                      size=\"small\"\n                      disabled={true}\n                    />\n                    <Button\n                      secondary\n                      type=\"submit\"\n                      icon={<Send />}\n                      label={<Text size=\"small\">SEND</Text>}\n                      disabled={true}\n                      color={props.color}\n                      margin={{ bottom: \"3px\" }}\n                    />\n                  </Box>\n                </>\n              )}\n            </Grid>\n          </Box>\n        </Box>\n      )}\n      {size === \"medium\" && (\n        <Box\n          gridArea=\"chat\"\n          background=\"#1B1B1B\"\n          justify=\"center\"\n          fill={true}\n          round=\"xsmall\"\n          pad=\"small\"\n          animation=\"zoomOut\"\n        >\n          <Box fill={true}>\n            <Grid\n              rows={[\"220px\", \"xxsmall\"]}\n              columns={[\"auto\"]}\n              areas={[\n                { name: \"messagingBox\", start: [0, 0], end: [0, 0] },\n                { name: \"sendingBox\", start: [0, 1], end: [0, 1] },\n              ]}\n              gap=\"small\"\n              responsive\n            >\n              {props.isReady() === true && props.userName === \"\" && (\n                <>\n                  <Box\n                    justify=\"center\"\n                    align=\"center\"\n                    gap=\"small\"\n                    responsive={true}\n                    background=\"#171717\"\n                  >\n                    <Form\n                      onSubmit={({ value }) => {\n                        props.addPlayer(value.username);\n                      }}\n                    >\n                      <Box\n                        direction=\"row\"\n                        gap=\"small\"\n                        animation=\"fadeIn\"\n                        responsive={true}\n                      >\n                        <TextInput\n                          name=\"username\"\n                          placeholder=\"Type Username...\"\n                          size=\"small\"\n                        />\n                        <Button\n                          secondary\n                          type=\"submit\"\n                          icon={<ChatOption />}\n                          label=\"CHAT!\"\n                          alignSelf=\"stretch\"\n                          color={props.color}\n                        />\n                      </Box>\n                    </Form>\n                  </Box>\n\n                  <Form\n                    onSubmit={({ value }) => {\n                      props.setMessage(value.message);\n                      setValue(\"\");\n                    }}\n                  >\n                    <Box\n                      gridArea=\"sendingBox\"\n                      direction=\"row\"\n                      gap=\"small\"\n                      fill={true}\n                      justify=\"center\"\n                      animation=\"fadeIn\"\n                      responsive={true}\n                    >\n                      <TextInput\n                        placeholder=\"You must choose a username to chat!\"\n                        size=\"small\"\n                        name=\"message\"\n                        value={value}\n                        onChange={(event) => setValue(event.target.value)}\n                        disabled={true}\n                      />\n                      <Button\n                        secondary\n                        type=\"submit\"\n                        icon={<Send />}\n                        label={<Text size=\"small\">SEND</Text>}\n                        disabled={true}\n                        color={props.color}\n                        margin={{ bottom: \"3px\" }}\n                      />\n                    </Box>\n                  </Form>\n                </>\n              )}\n              {props.userName !== \"\" && props.isReady() === true && (\n                <>\n                  <Box animation=\"fadeIn\" responsive={true}>\n                    <ChatMessages socket={props.socket} color={props.color} />\n                  </Box>\n                  <Form\n                    onSubmit={({ value }) => {\n                      props.setMessage(value.message);\n                      setValue(\"\");\n                    }}\n                  >\n                    <Box\n                      gridArea=\"sendingBox\"\n                      direction=\"row\"\n                      gap=\"small\"\n                      fill={true}\n                      justify=\"center\"\n                      animation=\"fadeIn\"\n                    >\n                      <TextInput\n                        placeholder=\"Type Here...\"\n                        size=\"small\"\n                        name=\"message\"\n                        value={value}\n                        onChange={(event) => setValue(event.target.value)}\n                      />\n                      <Button\n                        secondary\n                        type=\"submit\"\n                        icon={<Send />}\n                        label={<Text size=\"small\">SEND</Text>}\n                        color={props.color}\n                        margin={{ bottom: \"3px\" }}\n                      />\n                    </Box>\n                  </Form>\n                </>\n              )}\n              {props.userName === \"\" && props.isReady() === false && (\n                <>\n                  <ChatMessages socket={props.socket} color={props.color} />\n\n                  <Box\n                    gridArea=\"sendingBox\"\n                    direction=\"row\"\n                    gap=\"small\"\n                    fill={true}\n                    justify=\"center\"\n                    animation=\"fadeIn\"\n                    responsive={true}\n                    size=\"xxsmall\"\n                    align=\"stretch\"\n                  >\n                    <TextInput\n                      placeholder=\"You must be connected with MetaMask to chat!\"\n                      size=\"small\"\n                      disabled={true}\n                      align=\"stretch\"\n                    />\n                    <Button\n                      secondary\n                      type=\"submit\"\n                      icon={<Send />}\n                      label={<Text size=\"small\">SEND</Text>}\n                      disabled={true}\n                      color={props.color}\n                      margin={{ bottom: \"3px\" }}\n                    />\n                  </Box>\n                </>\n              )}\n            </Grid>\n          </Box>\n        </Box>\n      )}\n      {(size === \"large\" || size === \"xlarge\") && (\n        <Box\n          gridArea=\"chat\"\n          background=\"#1B1B1B\"\n          justify=\"center\"\n          fill={true}\n          round=\"xsmall\"\n          pad=\"small\"\n          animation=\"zoomOut\"\n        >\n          <Box fill={true}>\n            <Grid\n              rows={[\"300px\", \"xxsmall\"]}\n              columns={[\"auto\"]}\n              areas={[\n                { name: \"messagingBox\", start: [0, 0], end: [0, 0] },\n                { name: \"sendingBox\", start: [0, 1], end: [0, 1] },\n              ]}\n              gap=\"small\"\n            >\n              {props.isReady() === true && props.userName === \"\" && (\n                <>\n                  <Box\n                    justify=\"center\"\n                    align=\"center\"\n                    gap=\"small\"\n                    responsive={true}\n                    background=\"#171717\"\n                  >\n                    <Form\n                      onSubmit={({ value }) => {\n                        props.addPlayer(value.username);\n                      }}\n                    >\n                      <Box\n                        direction=\"row\"\n                        gap=\"small\"\n                        animation=\"fadeIn\"\n                        responsive={true}\n                      >\n                        <TextInput\n                          name=\"username\"\n                          placeholder=\"Type Username...\"\n                          size=\"medium\"\n                        />\n                        <Button\n                          secondary\n                          type=\"submit\"\n                          icon={<ChatOption />}\n                          size=\"xlarge\"\n                          label=\"CHAT!\"\n                          alignSelf=\"stretch\"\n                          color={props.color}\n                        />\n                      </Box>\n                    </Form>\n                  </Box>\n\n                  <Form\n                    onSubmit={({ value }) => {\n                      props.setMessage(value.message);\n                      setValue(\"\");\n                    }}\n                  >\n                    <Box\n                      gridArea=\"sendingBox\"\n                      direction=\"row\"\n                      gap=\"small\"\n                      fill={true}\n                      justify=\"center\"\n                      animation=\"fadeIn\"\n                      responsive={true}\n                    >\n                      <TextInput\n                        placeholder=\"You must choose a username to chat!\"\n                        size=\"medium\"\n                        name=\"message\"\n                        value={value}\n                        onChange={(event) => setValue(event.target.value)}\n                        disabled={true}\n                      />\n                      <Button\n                        secondary\n                        type=\"submit\"\n                        icon={<Send />}\n                        label={<Text size=\"small\">SEND</Text>}\n                        disabled={true}\n                        color={props.color}\n                      />\n                    </Box>\n                  </Form>\n                </>\n              )}\n              {props.userName !== \"\" && props.isReady() === true && (\n                <>\n                  <Box animation=\"fadeIn\" responsive={true}>\n                    <ChatMessages socket={props.socket} color={props.color} />\n                  </Box>\n                  <Form\n                    onSubmit={({ value }) => {\n                      props.setMessage(value.message);\n                      setValue(\"\");\n                    }}\n                  >\n                    <Box\n                      gridArea=\"sendingBox\"\n                      direction=\"row\"\n                      gap=\"small\"\n                      fill={true}\n                      justify=\"center\"\n                      animation=\"fadeIn\"\n                    >\n                      <TextInput\n                        placeholder=\"Type Here...\"\n                        size=\"medium\"\n                        name=\"message\"\n                        value={value}\n                        onChange={(event) => setValue(event.target.value)}\n                      />\n                      <Button\n                        secondary\n                        type=\"submit\"\n                        icon={<Send />}\n                        label={<Text size=\"small\">SEND</Text>}\n                        color={props.color}\n                      />\n                    </Box>\n                  </Form>\n                </>\n              )}\n              {props.userName === \"\" && props.isReady() === false && (\n                <>\n                  <ChatMessages socket={props.socket} color={props.color} />\n\n                  <Box\n                    gridArea=\"sendingBox\"\n                    direction=\"row\"\n                    gap=\"small\"\n                    fill={true}\n                    justify=\"center\"\n                    animation=\"fadeIn\"\n                    responsive={true}\n                  >\n                    <TextInput\n                      placeholder=\"You must be connected with MetaMask to chat!\"\n                      size=\"medium\"\n                      disabled={true}\n                    />\n                    <Button\n                      secondary\n                      type=\"submit\"\n                      icon={<Send />}\n                      label={<Text size=\"small\">SEND</Text>}\n                      disabled={true}\n                      color={props.color}\n                    />\n                  </Box>\n                </>\n              )}\n            </Grid>\n          </Box>\n        </Box>\n      )}\n    </>\n  );\n}\n\nexport default ChatComponent;\n","import React from \"react\";\nimport { VictoryLine, VictoryChart, VictoryArea, VictoryAxis } from \"victory\";\nimport { Box, Heading, Stack, ResponsiveContext } from \"grommet\";\n\nclass ChartContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [{ x: 0, y: 1 }],\n      maxX: 0.69314,\n      maxY: 2,\n      startTime: Date.now() + 10000,\n      endTime: Date.now() + 10000,\n      crashPoint: 0,\n      connected: false, // getting the server time\n      loaded: false, // filling the chart's array to fit the actual time\n      size: ResponsiveContext,\n      timeDelay: 0,\n    };\n  }\n\n  growthFunc = (ms) => {\n    return 0.005 * ms;\n  };\n\n  loop() {\n    this.elapsed = Date.now() - this.state.startTime;\n\n    this.tick = this.elapsed / 100;\n\n    this.dataArray = {\n      x: 0.005 * this.tick,\n      y: Math.exp(0.005 * this.tick),\n    };\n\n    if (this.dataArray.y <= this.props.crashPoint) {\n      this.setState({ data: [...this.state.data, this.dataArray] });\n\n      if (this.dataArray.y >= this.props.autoCashOutMultiplier) {\n        this.props.autoCashOut(this.props.autoCashOutMultiplier);\n      }\n      if (this.dataArray.x > 0.69314) {\n        this.setState({ maxX: this.dataArray.x });\n      }\n      if (this.dataArray.y > 2) {\n        this.setState({ maxY: this.dataArray.y });\n      }\n      this.id = setTimeout(this.loop.bind(this), 1000 / 60);\n    }\n  }\n\n  componentDidMount() {\n    this.props.socket.on(\"chartArray\", (receivedChartArray) => {\n      if (!this.state.loaded) {\n        this.setState({ data: receivedChartArray });\n        this.setState({ loaded: true });\n      }\n    });\n\n    this.props.socket.on(\"startData\", (receivedStartData) => {\n      this.setState({ startTime: Date.parse(receivedStartData) });\n      this.setState({ connected: true });\n      setTimeout(this.loop.bind(this), 1000 / 60);\n    });\n\n    this.props.socket.on(\"endData\", (receivedEndData) => {\n      this.setState({ endTime: Date.parse(receivedEndData) });\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <ResponsiveContext.Consumer>\n          {(size) =>\n            size === \"small\" && (\n              <>\n                <Box\n                  gridArea=\"chart\"\n                  background=\"#171717\"\n                  fill={true}\n                  pad=\"small\"\n                  round=\"xsmall\"\n                  responsive={true}\n                  border={{ color: \"#1B1B1B\", size: \"large\" }}\n                >\n                  <Stack anchor=\"center\" fill>\n                    <VictoryChart\n                      maxDomain={{ x: this.state.maxX, y: this.state.maxY }}\n                      minDomain={{ x: 0, y: 1 }}\n                      height={700}\n                      width={1390}\n                    >\n                      <VictoryAxis\n                        dependentAxis\n                        orientation=\"left\"\n                        style={{\n                          axis: { stroke: \"#AAAAAA\", strokeWidth: 1 },\n                          tickLabels: {\n                            fill: \"#AAAAAA\",\n                            fontSize: 19,\n                            fontFamily: \"HelveticaNeueBd\",\n                          },\n                        }}\n                        tickFormat={(t) => `${t}x`}\n                      />\n                      <VictoryAxis\n                        orientation=\"bottom\"\n                        style={{\n                          axis: { stroke: \"#AAAAAA\", strokeWidth: 1 },\n                          tickLabels: {\n                            fill: \"#AAAAAA\",\n                            strokeWidth: 2,\n                            fontSize: 19,\n                            fontFamily: \"HelveticaNeueBd\",\n                          },\n                        }}\n                        tickFormat={(t) => `${t * 10}`}\n                      />\n                      <VictoryArea data={this.state.data} />\n                      <svg>\n                        <defs>\n                          <linearGradient\n                            id=\"myGradient\"\n                            x1=\"0%\"\n                            y1=\"0%\"\n                            x2=\"0%\"\n                            y2=\"100%\"\n                          >\n                            <stop offset=\"0%\" stopColor=\"#FFCA58\" />\n                            <stop offset=\"100%\" stopColor={this.props.color} />\n                          </linearGradient>\n                        </defs>\n                      </svg>\n                      <VictoryLine\n                        style={{\n                          data: {\n                            stroke: \"url(#myGradient)\",\n                            strokeWidth: 15,\n                            border: \"10px\",\n                          },\n                          parent: { border: \"50px solid #fff\" },\n                        }}\n                        data={this.state.data} //props.data\n                        interpolation=\"natural\"\n                      />\n                    </VictoryChart>\n                    <Box\n                      animation={{\n                        type: \"zoomOut\",\n                        duration: 50,\n                        size: \"large\",\n                      }}\n                    >\n                      <Heading\n                        size=\"large\"\n                        color={this.props.color}\n                        alignSelf=\"center\"\n                        margin=\"none\"\n                      >\n                        {this.state.data[this.state.data.length - 1].y.toFixed(\n                          2\n                        ) + \"x\"}\n                      </Heading>\n                    </Box>\n                  </Stack>\n                </Box>\n              </>\n            )\n          }\n        </ResponsiveContext.Consumer>\n        <ResponsiveContext.Consumer>\n          {(size) =>\n            size === \"medium\" && (\n              <>\n                <Box\n                  gridArea=\"chart\"\n                  background=\"#171717\"\n                  fill={true}\n                  pad=\"small\"\n                  round=\"xsmall\"\n                  responsive={true}\n                  border={{ color: \"#1B1B1B\", size: \"large\" }}\n                >\n                  <Stack anchor=\"center\" fill>\n                    <VictoryChart\n                      maxDomain={{ x: this.state.maxX, y: this.state.maxY }}\n                      minDomain={{ x: 0, y: 1 }}\n                      height={700}\n                      width={1390}\n                    >\n                      <VictoryAxis\n                        dependentAxis\n                        orientation=\"left\"\n                        style={{\n                          axis: { stroke: \"#AAAAAA\", strokeWidth: 1.5 },\n                          tickLabels: {\n                            fill: \"#AAAAAA\",\n                            fontSize: 28,\n                            fontFamily: \"HelveticaNeueBd\",\n                          },\n                        }}\n                        tickFormat={(t) => `${t}x`}\n                      />\n                      <VictoryAxis\n                        orientation=\"bottom\"\n                        style={{\n                          axis: { stroke: \"#AAAAAA\", strokeWidth: 1.5 },\n                          tickLabels: {\n                            fill: \"#AAAAAA\",\n                            strokeWidth: 2,\n                            fontSize: 28,\n                            fontFamily: \"HelveticaNeueBd\",\n                          },\n                        }}\n                        tickFormat={(t) => `${t * 10}`}\n                      />\n                      <VictoryArea data={this.state.data} />\n                      <svg>\n                        <defs>\n                          <linearGradient\n                            id=\"myGradient\"\n                            x1=\"0%\"\n                            y1=\"0%\"\n                            x2=\"0%\"\n                            y2=\"100%\"\n                          >\n                            <stop offset=\"0%\" stopColor=\"#FFCA58\" />\n                            <stop offset=\"100%\" stopColor={this.props.color} />\n                          </linearGradient>\n                        </defs>\n                      </svg>\n                      <VictoryLine\n                        style={{\n                          data: {\n                            stroke: \"url(#myGradient)\",\n                            strokeWidth: 15,\n                            border: \"10px\",\n                          },\n                          parent: { border: \"50px solid #fff\" },\n                        }}\n                        data={this.state.data}\n                        interpolation=\"natural\"\n                      />\n                    </VictoryChart>\n                    <Box\n                      animation={{\n                        type: \"zoomOut\",\n                        duration: 50,\n                        size: \"large\",\n                      }}\n                    >\n                      <Heading\n                        size=\"large\"\n                        color={this.props.color}\n                        alignSelf=\"center\"\n                        margin=\"none\"\n                      >\n                        {this.state.data[this.state.data.length - 1].y.toFixed(\n                          2\n                        ) + \"x\"}\n                      </Heading>\n                    </Box>\n                  </Stack>\n                </Box>\n              </>\n            )\n          }\n        </ResponsiveContext.Consumer>\n        <ResponsiveContext.Consumer>\n          {(size) =>\n            (size === \"large\" || size === \"xlarge\") && (\n              <>\n                <Box\n                  gridArea=\"chart\"\n                  background=\"#171717\"\n                  fill={true}\n                  pad=\"small\"\n                  round=\"xsmall\"\n                  responsive={true}\n                  border={{ color: \"#1B1B1B\", size: \"large\" }}\n                >\n                  <Stack anchor=\"center\" fill>\n                    <VictoryChart\n                      maxDomain={{ x: this.state.maxX, y: this.state.maxY }}\n                      minDomain={{ x: 0, y: 1 }}\n                      height={700}\n                      width={1390}\n                    >\n                      <VictoryAxis\n                        dependentAxis\n                        orientation=\"left\"\n                        style={{\n                          axis: { stroke: \"#AAAAAA\", strokeWidth: 2 },\n                          tickLabels: {\n                            fill: \"#AAAAAA\",\n                            fontSize: 30,\n                            fontFamily: \"HelveticaNeueBd\",\n                          },\n                        }}\n                        tickFormat={(t) => `${t}x`}\n                      />\n                      <VictoryAxis\n                        orientation=\"bottom\"\n                        style={{\n                          axis: { stroke: \"#AAAAAA\", strokeWidth: 2 },\n                          tickLabels: {\n                            fill: \"#AAAAAA\",\n                            strokeWidth: 2,\n                            fontSize: 30,\n                            fontFamily: \"HelveticaNeueBd\",\n                          },\n                        }}\n                        tickFormat={(t) => `${t * 10}`}\n                      />\n                      <VictoryArea data={this.state.data} />\n                      <svg>\n                        <defs>\n                          <linearGradient\n                            id=\"myGradient\"\n                            x1=\"0%\"\n                            y1=\"0%\"\n                            x2=\"0%\"\n                            y2=\"100%\"\n                          >\n                            <stop offset=\"0%\" stopColor=\"#FFCA58\" />\n                            <stop offset=\"100%\" stopColor=\"#6FFFB0\" />\n                          </linearGradient>\n                        </defs>\n                      </svg>\n                      <VictoryLine\n                        style={{\n                          data: {\n                            stroke: \"url(#myGradient)\",\n                            strokeWidth: 15,\n                            border: \"10px\",\n                          },\n                          parent: { border: \"50px solid #fff\" },\n                        }}\n                        data={this.state.data}\n                        interpolation=\"natural\"\n                      />\n                    </VictoryChart>\n                    <Box\n                      animation={{\n                        type: \"zoomOut\",\n                        duration: 50,\n                        size: \"large\",\n                      }}\n                    >\n                      <Heading\n                        size=\"xlarge\"\n                        color=\"#6FFFB0\"\n                        alignSelf=\"center\"\n                        margin=\"none\"\n                      >\n                        {this.state.data[this.state.data.length - 1].y.toFixed(\n                          2\n                        ) + \"x\"}\n                      </Heading>\n                    </Box>\n                  </Stack>\n                </Box>\n              </>\n            )\n          }\n        </ResponsiveContext.Consumer>\n      </>\n    );\n  }\n}\n\nexport default ChartContainer;\n","import { Box, Grid } from \"grommet\";\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport { ResponsiveContext } from \"grommet\";\nimport MainCrashedComponent from \"./MainCrashedComponent\";\nimport MainBettingComponent from \"./MainBettingComponent\";\nimport ControlComponent from \"./ControlComponent\";\nimport ResultTableComponent from \"./ResultTableComponent\";\nimport ChatComponent from \"./ChatComponent\";\nimport ChartContainer from \"./ChartContainer.js\";\n\nconst columns = {\n  small: [\"auto\"],\n  medium: [\"40%\", \"21%\", \"auto\"],\n  large: [\"large\", \"medium\", \"auto\"],\n  xlarge: [\"large\", \"medium\", \"auto\"],\n};\n\nconst rows = {\n  small: [\"small\", \"small\", \"auto\", \"medium\"],\n  medium: [\"305px\", \"300px\"],\n  large: [\"medium\", \"medium\"],\n  xlarge: [\"medium\", \"medium\"],\n};\n\nconst fixedGridAreas = {\n  small: [\n    { name: \"chart\", start: [0, 0], end: [0, 0] },\n    { name: \"betting\", start: [0, 1], end: [0, 1] },\n    { name: \"resultTable\", start: [0, 3], end: [0, 3] },\n    { name: \"chat\", start: [0, 2], end: [0, 2] },\n  ],\n  medium: [\n    { name: \"chart\", start: [0, 0], end: [0, 0] },\n    { name: \"betting\", start: [1, 0], end: [1, 0] },\n    { name: \"resultTable\", start: [2, 0], end: [2, 1] },\n    { name: \"chat\", start: [0, 1], end: [1, 1] },\n  ],\n  large: [\n    { name: \"chart\", start: [0, 0], end: [0, 0] },\n    { name: \"betting\", start: [1, 0], end: [1, 0] },\n    { name: \"resultTable\", start: [2, 0], end: [2, 1] },\n    { name: \"chat\", start: [0, 1], end: [1, 1] },\n  ],\n  xlarge: [\n    { name: \"chart\", start: [0, 0], end: [0, 0] },\n    { name: \"betting\", start: [1, 0], end: [1, 0] },\n    { name: \"resultTable\", start: [2, 0], end: [2, 1] },\n    { name: \"chat\", start: [0, 1], end: [1, 1] },\n  ],\n};\n\nconst Responsive = ({\n  children,\n  overrideColumns,\n  overrideRows,\n  areas,\n  ...props\n}) => (\n  <ResponsiveContext.Consumer>\n    {(size) => {\n      let columnsVal = columns;\n      if (columns) {\n        if (columns[size]) {\n          columnsVal = columns[size];\n        }\n      }\n\n      let rowsVal = rows;\n      if (rows) {\n        if (rows[size]) {\n          rowsVal = rows[size];\n        }\n      }\n\n      let areasVal = areas;\n      if (areas && !Array.isArray(areas)) areasVal = areas[size];\n\n      return (\n        <Grid\n          {...props}\n          areas={!areasVal ? undefined : areasVal}\n          rows={!rowsVal ? size : rowsVal}\n          columns={!columnsVal ? size : columnsVal}\n        >\n          {children}\n        </Grid>\n      );\n    }}\n  </ResponsiveContext.Consumer>\n);\n\nfunction MainComponent(props) {\n  // Defining states\n  const [state, setState] = useState(\"BETTING\"); // BETTING, PLAYING, CRASHED\n  const [data, setData] = useState([{ x: 0, y: 1 }]);\n  const [crashPoint, setCrashPoint] = useState(1.0);\n  const [resultTableAll, setResultTableAll] = useState([]);\n  const [connected, setConnected] = useState(false);\n  const [chartArray, setChartArray] = useState([{ x: 0, y: 1 }]);\n  const [bettingTime, setBettingTime] = useState(undefined);\n  const [gameStartTime, setGameStartTime] = useState(0);\n\n  useEffect(() => {\n    props.socket.on(\"currentState\", (receivedState) => {\n      setState(receivedState);\n      if (receivedState === \"CRASHED\") {\n        setData([{ x: 0, y: 1 }]);\n      }\n    });\n    props.socket.on(\"calculatedCrashPoint\", (receivedCrashPoint) => {\n      setCrashPoint(receivedCrashPoint);\n    });\n    props.socket.on(\"bettingTime\", (receivedBettingTime) => {\n      setBettingTime(receivedBettingTime);\n    });\n    props.socket.on(\"gameStartTime\", (receivedGameStartTime) => {\n      setGameStartTime(receivedGameStartTime);\n    });\n    props.socket.on(\"startData\", (receivedStartData) => {\n      props.setStartTimeApp(Date.parse(receivedStartData));\n    });\n  }, [props]);\n\n  useEffect(() => {\n    props.setGameState(state);\n    if (state === \"BETTING\") {\n      props.setUserBetAmount(0);\n      props.setUserPlacedBet(false);\n      props.setUserWon(false);\n      props.setUserCrashed(false);\n      props.setWonAmount(undefined);\n      props.setAutoCashOutMultiplier(undefined);\n      setCrashPoint(1.0);\n      setConnected(false);\n      setResultTableAll([]);\n      props.setInitiatedCashOut(false);\n      props.setWonAmount(0);\n      props.setCashOutMultiplier(undefined);\n    }\n    if (state === \"PLAYING\") {\n      props.setInitColorBetting(false);\n      props.setInitColorWaiting(false);\n    } // eslint-disable-next-line\n  }, [state]);\n\n  useEffect(() => {\n    props.socket.on(\"everyPlayer\", (receivedData) => {\n      setResultTableAll(receivedData);\n    });\n  });\n\n  useEffect(() => {\n    if (state === \"BETTING\" && !props.userPlacedBet) {\n      props.setColor(\"#6FFFB0\");\n      props.setCashOutColor(\"#FF4040\");\n    }\n    if (state === \"BETTING\" && props.initColorWaiting) {\n      props.setColor(\"#FFCA58\");\n    }\n    if (state === \"PLAYING\") {\n      props.setColor(\"#00C781\");\n      props.setCashOutColor(\"#FF4040\");\n    }\n    if (state === \"CRASHED\" && props.userCrashed) {\n      props.setColor(\"#FF4040\");\n    }\n    if (state === \"CRASHED\" && props.userWon) {\n      props.setColor(\"#00C781\");\n    }\n    if (state === \"CRASHED\" && !props.userCrashed && !props.userWon) {\n      props.setColor(\"#FF4040\");\n    }\n    if (state === \"CRASHED\" && !props.loggedIn) {\n      props.setColor(\"#FF4040\");\n    }\n  }, [state, props]);\n\n  return (\n    <Box background=\"#222222\">\n      <Responsive\n        rows={rows}\n        columns={columns}\n        gap=\"small\"\n        pad=\"small\"\n        areas={fixedGridAreas}\n      >\n        <ControlComponent\n          logIn={props.logIn}\n          isReady={props.isReady}\n          state={state}\n          placeBet={props.placeBet}\n          initiateCashOut={props.initiateCashOut}\n          setInitConnection={props.setInitConnection}\n          userPlacedBet={props.userPlacedBet}\n          userBetAmount={props.userBetAmount}\n          userCrashed={props.userCrashed}\n          userWon={props.userWon}\n          wonAmount={props.wonAmount}\n          setAccounts={props.setAccounts}\n          setChainId={props.setChainId}\n          setWeb3={props.setWeb3}\n          setInitiatedLogIn={props.setInitiatedLogIn}\n          setLoggedIn={props.setLoggedIn}\n          setAutoCashOutMultiplier={props.setAutoCashOutMultiplier}\n          color={props.color}\n          cashOutColor={props.cashOutColor}\n          metaMaskInstalled={props.metaMaskInstalled}\n        />\n        <ResultTableComponent\n          state={state}\n          placeBet={props.placeBet}\n          initiateCashOut={props.initiateCashOut}\n          resultTableAll={resultTableAll}\n          color={props.color}\n        />\n        <ChatComponent\n          setUserName={props.setUserName}\n          userName={props.userName}\n          isReady={props.isReady}\n          playerExists={props.playerExists}\n          checkPlayerInDB={props.checkPlayerInDB}\n          setMessage={props.setMessage}\n          socket={props.socket}\n          chatLoaded={props.chatLoaded}\n          setChatLoaded={props.setChatLoaded}\n          addPlayer={props.addPlayer}\n          color={props.color}\n        />\n        {state === \"BETTING\" && (\n          <MainBettingComponent\n            data={data}\n            crashPoint={crashPoint}\n            bettingTime={bettingTime}\n            gameStartTime={gameStartTime}\n            color={props.color}\n          />\n        )}\n        {state === \"PLAYING\" && (\n          <ChartContainer\n            maxX={props.maxX}\n            maxY={props.maxY}\n            data={props}\n            crashPoint={crashPoint}\n            setMaxX={props.setMaxX}\n            setMaxY={props.setMaxY}\n            setCashOutMultiplier={props.setCashOutMultiplier}\n            state={state}\n            connected={connected}\n            setConnected={setConnected}\n            chartArray={chartArray}\n            setChartArray={setChartArray}\n            socket={props.socket}\n            initiatedCashOut={props.initiatedCashOut}\n            setState={setState}\n            setStartTimeApp={props.setStartTimeApp}\n            initiateCashOut={props.initiateCashOut}\n            autoCashOutMultiplier={props.autoCashOutMultiplier}\n            autoCashOut={props.autoCashOut}\n            color={props.color}\n            timeDelay={props.timeDelay}\n          />\n        )}\n        {state === \"CRASHED\" && (\n          <MainCrashedComponent\n            data={data}\n            crashPoint={crashPoint}\n            color={props.color}\n          />\n        )}\n      </Responsive>\n    </Box>\n  );\n}\n\nexport default MainComponent;\n","import \"./App.css\";\nimport { Grommet, Footer, Text, ResponsiveContext } from \"grommet\";\nimport { grommet } from \"grommet/themes\";\nimport HeaderComponent from \"./HeaderComponent.js\";\nimport MainComponent from \"./MainComponent\";\nimport Crash from \"./contracts/Crash.json\";\nimport CrashToken from \"./contracts/CrashToken.json\";\nimport { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport { deepMerge } from \"grommet/utils\";\nimport io from \"socket.io-client\";\nimport Web3 from \"web3\";\n\n//var socket = io(\"http://localhost:3003\");\n//var socket = io(\"https://decentralizedcrashgame.herokuapp.com\");\nvar socket = io(\"http://localhost:3003\");\n\nfunction App() {\n  // web3 hooks\n  const [web3, setWeb3] = useState(undefined);\n  const [accounts, setAccounts] = useState([]); //\n  const [contract, setContract] = useState(undefined); //\n  const [token, setToken] = useState(undefined);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [contractAddress, setContractAddress] = useState(\"\");\n  const [tokenAddress, setTokenAddress] = useState(\"\");\n  const [owner, setOwner] = useState(undefined);\n  const [metaMaskInstalled, setMetaMaskInstalled] = useState(undefined);\n  const houseFee = 1; // 1%\n\n  // chat hooks\n  const [userName, setUserName] = useState(\"\");\n  const [userAddress, setUserAddress] = useState(\"\");\n  const [playerExistsInDB, setplayerExistsInDB] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [chatLoaded, setChatLoaded] = useState(false);\n\n  // gameplay hooks\n  const [userBetAmount, setUserBetAmount] = useState(0);\n  const [userPlacedBet, setUserPlacedBet] = useState(false);\n  const [userCrashed, setUserCrashed] = useState(false);\n  const [userWon, setUserWon] = useState(false);\n  const [wonAmount, setWonAmount] = useState(0);\n  const [gameState, setGameState] = useState(\"\");\n  const [initiatedCashOut, setInitiatedCashOut] = useState(false);\n  const [cashOutMultiplier, setCashOutMultiplier] = useState(undefined);\n  const [startTimeApp, setStartTimeApp] = useState(undefined);\n  const [autoCashOutMultiplier, setAutoCashOutMultiplier] = useState(undefined);\n  const [color, setColor] = useState(\"#6FFFB0\");\n  const [cashOutColor, setCashOutColor] = useState(\"#FF4040\");\n  const [initColorBetting, setInitColorBetting] = useState(true);\n  const [initColorWaiting, setInitColorWaiting] = useState(false);\n\n  // Database connection\n  const addPlayer = async (user) => {\n    if (userName !== null && userAddress !== null) {\n      //Axios.post(\"http://localhost:3003/create\", {\n      Axios.post(\"http://localhost:3003/create\", {\n        address: await window.ethereum.request({\n          method: \"eth_accounts\",\n        }),\n        username: user,\n      }).then(() => {\n        setUserName(user);\n      });\n    }\n  };\n\n  const checkPlayerInDB = async () => {\n    if (window.ethereum) {\n      Axios.post(\"http://localhost:3003/check\", {\n        address: await window.ethereum.request({\n          method: \"eth_accounts\",\n        }),\n      }).then((response) => {\n        if (response.data[0] !== undefined) {\n          if (response.data[0].addressCnt > 0) {\n            getPlayerUsername();\n            setplayerExistsInDB(true);\n          } else {\n            setplayerExistsInDB(false);\n          }\n        }\n      });\n    }\n  };\n\n  const getPlayerUsername = async () => {\n    Axios.post(\"http://localhost:3003/username\", {\n      address: await window.ethereum.request({\n        method: \"eth_accounts\",\n      }),\n    }).then((response) => {\n      setUserName(response.data[0].username);\n    });\n  };\n\n  const isMetaMaskInstalled = () => {\n    if (window.ethereum) setMetaMaskInstalled(true);\n    else setMetaMaskInstalled(false);\n  };\n\n  // Web3 connection\n\n  useEffect(() => {\n    isMetaMaskInstalled();\n    const init = async () => {\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        const accs = await window.ethereum.request({\n          method: \"eth_accounts\",\n        });\n        setAccounts(accs);\n\n        const contract = new web3.eth.Contract(\n          Crash.abi,\n          process.env.REACT_APP_GAME_ADDRESS\n        );\n        const address = process.env.REACT_APP_TOKEN_ADDRESS;\n        const token = new web3.eth.Contract(CrashToken.abi, address);\n        const owner = web3.eth.accounts.privateKeyToAccount(\n          process.env.REACT_APP_PRIVATE_KEY\n        );\n        setOwner(owner);\n        setWeb3(web3);\n        setContract(contract);\n        setToken(token);\n        setContractAddress(process.env.REACT_APP_GAME_ADDRESS);\n        setTokenAddress(address);\n        setUserAddress(accounts[0]);\n        checkPlayerInDB();\n\n        if (accounts.length > 0) {\n          setLoggedIn(true);\n          checkPlayerInDB();\n        }\n      }\n    };\n    init();\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\n        setplayerExistsInDB(false);\n        checkPlayerInDB();\n        setAccounts(accounts);\n        setUserAddress(accounts[0]);\n        setUserName(\"\");\n        setUserPlacedBet(false);\n      });\n      window.ethereum.on(\"disconnect\", () => {\n        setLoggedIn(false);\n        setplayerExistsInDB(false);\n        setAccounts([]);\n        setUserAddress(\"\");\n        setUserName(\"\");\n        setUserPlacedBet(false);\n      });\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    checkPlayerInDB();\n  });\n\n  useEffect(() => {\n    if (window.ethereum && !window.ethereum.isConnected) {\n      setLoggedIn(false);\n      setUserAddress(\"\");\n    }\n  }, []);\n\n  useEffect(() => {\n    if (accounts.length > 0) {\n      setLoggedIn(true);\n    } else {\n      setLoggedIn(false);\n    }\n  }, [accounts]);\n\n  useEffect(() => {\n    const sendMessage = () => {\n      if (userAddress !== \"\" && userName !== \"\" && message !== \"\") {\n        Axios.post(\"http://localhost:3003/chat\", {\n          address: userAddress,\n          username: userName,\n          message: message,\n        }).then((response) => {\n          //console.log(\"Success!\");\n        });\n      }\n    };\n    sendMessage(); // eslint-disable-next-line\n  }, [message]);\n\n  const isReady = () => {\n    return accounts.length > 0;\n  };\n\n  useEffect(() => {\n    if (userBetAmount > 0 && gameState === \"BETTING\" && userPlacedBet) {\n      socket.emit(\"resultTableUserData\", {\n        user: userName,\n        bet: userBetAmount,\n        bravery: calculateBravery(userBetAmount),\n      });\n    }\n  }, [userName, userBetAmount, gameState, userPlacedBet]);\n\n  useEffect(() => {\n    if (\n      userBetAmount > 0 &&\n      wonAmount > 0 &&\n      gameState === \"PLAYING\" &&\n      userPlacedBet\n    ) {\n      socket.emit(\"resultTableUserData\", {\n        user: userName,\n        at: cashOutMultiplier,\n        bet: userBetAmount,\n        profit: wonAmount - userBetAmount,\n        bravery: calculateBravery(userBetAmount),\n      });\n    }\n  }, [\n    userName,\n    userBetAmount,\n    cashOutMultiplier,\n    wonAmount,\n    gameState,\n    userPlacedBet,\n  ]);\n\n  useEffect(() => {\n    if (userBetAmount > 0 && gameState === \"CRASHED\" && userPlacedBet) {\n      socket.emit(\"resultTableUserData\", {\n        user: userName,\n        at: cashOutMultiplier,\n        bet: userBetAmount,\n        profit: wonAmount - userBetAmount,\n        bravery: calculateBravery(userBetAmount),\n      });\n    }\n  }, [\n    userName,\n    cashOutMultiplier,\n    userBetAmount,\n    wonAmount,\n    gameState,\n    userPlacedBet,\n  ]);\n\n  // Web3 betting\n  async function placeBet(value) {\n    setAutoCashOutMultiplier(value.autoCashOut);\n    if (gameState === \"BETTING\") {\n      if (isReady) {\n        if (\n          (await token.methods.allowance(accounts[0], contractAddress).call()) <\n          web3.utils.toWei(value.betAmount.toString(), \"ether\")\n        ) {\n          await token.methods\n            .approve(\n              contractAddress,\n              web3.utils.toWei(web3.utils.toBN(100000000000), \"ether\")\n            )\n            .send({ from: accounts[0] });\n        }\n        await contract.methods\n          .placeBet(\n            web3.utils.toWei(value.betAmount.toString(), \"ether\"),\n            tokenAddress\n          )\n          .send({ from: accounts[0] });\n      }\n\n      setUserBetAmount(value.betAmount * ((100 - houseFee) / 100));\n      socket.emit(\"betAmountOfUser\", value.betAmount);\n      setUserPlacedBet(true);\n      setInitColorWaiting(true);\n    }\n  }\n\n  async function cashOut() {\n    if (gameState === \"PLAYING\") {\n      setInitiatedCashOut(true);\n      setUserCrashed(false);\n      setUserWon(true);\n      setInitColorBetting(true);\n\n      setWonAmount(\n        userBetAmount *\n          Math.exp((0.005 * (Date.now() - startTimeApp)) / 100).toFixed(2)\n      );\n      setCashOutMultiplier(\n        Math.exp((0.005 * (Date.now() - startTimeApp)) / 100).toFixed(2)\n      );\n\n      const betInside = await contract.methods.getBetAmount(accounts[0]).call();\n      const prizeAmount =\n        web3.utils.fromWei(betInside.toString(), \"ether\") *\n        Math.exp((0.005 * (Date.now() - startTimeApp)) / 100).toFixed(2);\n      const transaction1 = await token.methods.approve(\n        owner.address,\n        web3.utils.toWei(prizeAmount.toString(), \"ether\")\n      );\n      await send(web3, owner, transaction1);\n      const transaction2 = await token.methods.transferFrom(\n        owner.address,\n        accounts[0],\n        web3.utils.toWei(prizeAmount.toString(), \"ether\")\n      );\n      await send(web3, owner, transaction2);\n    }\n  }\n\n  async function autoCashOut(autoCashOutMultiplier) {\n    if (gameState === \"PLAYING\") {\n      setInitiatedCashOut(true);\n      setUserCrashed(false);\n      setUserWon(true);\n      setWonAmount(userBetAmount * autoCashOutMultiplier);\n      setCashOutMultiplier(autoCashOutMultiplier);\n      setInitColorBetting(true);\n\n      const betInside = await contract.methods.getBetAmount(accounts[0]).call();\n      const prizeAmount =\n        web3.utils.fromWei(betInside.toString(), \"ether\") *\n        autoCashOutMultiplier;\n      const transaction1 = await token.methods.approve(\n        owner.address,\n        web3.utils.toWei(prizeAmount.toString(), \"ether\")\n      );\n      await send(web3, owner, transaction1);\n      const transaction2 = await token.methods.transferFrom(\n        owner.address,\n        accounts[0],\n        web3.utils.toWei(prizeAmount.toString(), \"ether\")\n      );\n      await send(web3, owner, transaction2);\n    }\n  }\n\n  async function send(web3, account, transaction) {\n    const options = {\n      to: transaction._parent._address,\n      data: transaction.encodeABI(),\n      gas: await transaction.estimateGas({ from: account.address }),\n    };\n    const signed = await web3.eth.accounts.signTransaction(\n      options,\n      account.privateKey\n    );\n    const receipt = await web3.eth.sendSignedTransaction(signed.rawTransaction);\n    return receipt;\n  }\n\n  function initiateCashOut() {\n    cashOut();\n  }\n\n  function calculateBravery(bet) {\n    if (bet >= 500 && bet < 10000) {\n      return 10;\n    }\n    if (bet >= 10000 && bet < 20000) {\n      return 20;\n    }\n    if (bet >= 20000 && bet < 100000) {\n      return 25;\n    }\n    if (bet >= 100000 && bet < 500000) {\n      return 30;\n    }\n    if (bet >= 500000 && bet < 1000000) {\n      return 40;\n    }\n    if (bet >= 1000000 && bet < 10000000) {\n      return 60;\n    }\n    if (bet >= 10000000 && bet < 100000000) {\n      return 85;\n    }\n    if (bet >= 100000000) {\n      return 100;\n    }\n  }\n\n  const customTheme = {\n    formField: {\n      border: false,\n    },\n    button: {\n      border: {\n        radius: \"4px\",\n      },\n      hover: {\n        color: \"#81FCED\",\n      },\n    },\n    global: {\n      colors: {\n        text: {\n          dark: \"#F7F7F7\",\n          light: \"#1B1B1B\",\n        },\n      },\n      focus: {\n        border: {\n          color: color,\n        },\n      },\n      font: {\n        family: \"HelveticaNeueBd\",\n      },\n      drop: {\n        background: \"#222222\",\n        shadowSize: \"medium\",\n        extend: `\n          font-size: 14px;\n          border-bottom-left-radius: 12px;\n          border-bottom-right-radius: 12px;\n          li {\n            border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n          }\n          overflow: hidden;\n        `,\n      },\n      elevation: {\n        light: {\n          xsmall: \"0px 0px 5px #81FCED\",\n          xxsmall: \"10px 10px 10px #81FCED\",\n          small: \"0px 0px 0px #81FCED\",\n        },\n        dark: {\n          xsmall: \"0px 0px 5px #81FCED\",\n          xxsmall: \"10px 10px 10px #81FCED\",\n          medium: \"0px 0px 0px #81FCED\",\n        },\n      },\n    },\n    background: {\n      color: \"#171717\",\n    },\n    dataTable: {\n      header: {\n        border: {\n          color: \"#1B1B1B\",\n          side: \"bottom\",\n          size: \"small\",\n        },\n      },\n    },\n    menu: {\n      background: \"#171717\",\n    },\n    text: {\n      xxsmall: {\n        size: \"7px\",\n      },\n    },\n  };\n\n  return (\n    <Grommet\n      theme={deepMerge(grommet, customTheme)}\n      style={{\n        backgroundColor: \"#171717\",\n      }}\n      full\n    >\n      <HeaderComponent\n        setUserName={setUserName}\n        userName={userName}\n        loggedIn={loggedIn}\n        accounts={accounts}\n        playerExistsInDB={playerExistsInDB}\n        userAddress={userAddress}\n        checkPlayerInDB={checkPlayerInDB()}\n        isReady={isReady}\n        color={color}\n      />\n      <MainComponent\n        id=\"yo\"\n        isReady={isReady}\n        setUserName={setUserName}\n        userName={userName}\n        placeBet={placeBet}\n        initiateCashOut={initiateCashOut}\n        setCashOutMultiplier={setCashOutMultiplier}\n        playerExistsInDB={playerExistsInDB}\n        checkPlayerInDB={checkPlayerInDB()}\n        setMessage={setMessage}\n        userBetAmount={userBetAmount}\n        socket={socket}\n        chatLoaded={chatLoaded}\n        setChatLoaded={setChatLoaded}\n        userPlacedBet={userPlacedBet}\n        setUserBetAmount={setUserBetAmount}\n        setUserPlacedBet={setUserPlacedBet}\n        userCrashed={userCrashed}\n        setUserCrashed={setUserCrashed}\n        userWon={userWon}\n        setUserWon={setUserWon}\n        setGameState={setGameState}\n        wonAmount={wonAmount}\n        setWonAmount={setWonAmount}\n        initiatedCashOut={initiatedCashOut}\n        setInitiatedCashOut={setInitiatedCashOut}\n        setStartTimeApp={setStartTimeApp}\n        setAccounts={setAccounts}\n        setWeb3={setWeb3}\n        setLoggedIn={setLoggedIn}\n        setAutoCashOutMultiplier={setAutoCashOutMultiplier}\n        cashOut={cashOut}\n        autoCashOutMultiplier={autoCashOutMultiplier}\n        autoCashOut={autoCashOut}\n        addPlayer={addPlayer}\n        color={color}\n        setColor={setColor}\n        cashOutColor={cashOutColor}\n        setCashOutColor={setCashOutColor}\n        loggedIn={loggedIn}\n        initColorBetting={initColorBetting}\n        setInitColorBetting={setInitColorBetting}\n        initColorWaiting={initColorWaiting}\n        setInitColorWaiting={setInitColorWaiting}\n        metaMaskInstalled={metaMaskInstalled}\n      />\n\n      <Footer\n        background=\"#171717\"\n        pad={{ vertical: \"xsmall\", horizontal: \"medium\" }}\n      >\n        <ResponsiveContext.Consumer>\n          {(size) =>\n            size === \"small\" ? (\n              <>\n                <Text textAlign=\"start\" size=\"6px\">\n                  ©2021 CRASH. Enjoy! ❤️\n                </Text>\n                <Text textAlign=\"end\" size=\"6px\">\n                  We take {houseFee}% house fee on each bet & accept only $ITM.\n                </Text>\n              </>\n            ) : (\n              <>\n                <Text textAlign=\"start\" size=\"xsmall\">\n                  ©2021 CRASH. Have fun! ❤️\n                </Text>\n                <Text textAlign=\"end\" size=\"xsmall\">\n                  We take {houseFee}% house fee on each bet & accept only $ITM.\n                </Text>\n              </>\n            )\n          }\n        </ResponsiveContext.Consumer>\n      </Footer>\n    </Grommet>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}